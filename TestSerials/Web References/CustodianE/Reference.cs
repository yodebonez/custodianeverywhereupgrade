//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TestSerials.CustodianE {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PolicyServicesSoap", Namespace="http://Custodianservices.com/")]
    public partial class PolicyServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCRM_NIIDDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_LapseDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPTDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_Top10OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_TopProductlinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_TobeRenewedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_BrokerOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTBrokerMotorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPassportDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClaimStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPolicyValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPolicyExpiryDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPolicyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitClaimRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLifeProductCategOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLifeProductTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnnuityGuaranteePeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnnuitypaymentfreqOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnnuitypayOutFreqOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitPaymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitPaymentRecord1OperationCompleted;
        
        private System.Threading.SendOrPostCallback PostHomeShieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostHomeShield1OperationCompleted;
        
        private System.Threading.SendOrPostCallback PostSafetyPlusOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostSafetyPlus1OperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTMotorRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTOtherMotorRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTMotorRec1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMotorPolicyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLifeProductFrequencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLifeQuoteTermOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLifeCoverTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLifeClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLifeQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTTravelRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTMultipleTravelRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTTravelRec1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetlifePolicyBalancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTravelQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMotorQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHomeShieldQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSafetyplusQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTNotificationDetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotEMAILOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfirmTelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitRenewBusinessPayRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostTQSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostABSSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTQproposalNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostMarineRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostTravel2RagaOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostTravelRagaOldOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostTravel2RagaArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTBrokerMotorRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTBrokerTravelRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBrokerMotorQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostBrokerHouseHolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHouseHolderQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitClaimRegister1OperationCompleted;
        
        private System.Threading.SendOrPostCallback PostClaimsUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMorePolicyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_ActivePoliciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_CustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_ActiveCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_AllPoliciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_PolicyRenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_BirthdayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_ClaimsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_DashBoardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_PolicyDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_ClaimsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ABSMotorInterestOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSTNNPCTravelRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCRM_ClaimCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PolicyServices() {
            this.Url = global::TestSerials.Properties.Settings.Default.TestSerials_CustodianE_PolicyServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCRM_NIIDDataCompletedEventHandler GetCRM_NIIDDataCompleted;
        
        /// <remarks/>
        public event GetCRM_LapseDetailCompletedEventHandler GetCRM_LapseDetailCompleted;
        
        /// <remarks/>
        public event GetPPTDetailsCompletedEventHandler GetPPTDetailsCompleted;
        
        /// <remarks/>
        public event GetCRM_Top10CompletedEventHandler GetCRM_Top10Completed;
        
        /// <remarks/>
        public event GetCRM_TopProductlinesCompletedEventHandler GetCRM_TopProductlinesCompleted;
        
        /// <remarks/>
        public event GetCRM_TobeRenewedCompletedEventHandler GetCRM_TobeRenewedCompleted;
        
        /// <remarks/>
        public event GetCRM_BrokerCompletedEventHandler GetCRM_BrokerCompleted;
        
        /// <remarks/>
        public event POSTBrokerMotorCompletedEventHandler POSTBrokerMotorCompleted;
        
        /// <remarks/>
        public event GetPassportDetailsCompletedEventHandler GetPassportDetailsCompleted;
        
        /// <remarks/>
        public event GetClaimStatusCompletedEventHandler GetClaimStatusCompleted;
        
        /// <remarks/>
        public event GetContactClaimCompletedEventHandler GetContactClaimCompleted;
        
        /// <remarks/>
        public event GetPolicyValidationCompletedEventHandler GetPolicyValidationCompleted;
        
        /// <remarks/>
        public event GetPolicyExpiryDateCompletedEventHandler GetPolicyExpiryDateCompleted;
        
        /// <remarks/>
        public event GetPolicyDetailsCompletedEventHandler GetPolicyDetailsCompleted;
        
        /// <remarks/>
        public event SubmitClaimRegisterCompletedEventHandler SubmitClaimRegisterCompleted;
        
        /// <remarks/>
        public event GetLifeProductCategCompletedEventHandler GetLifeProductCategCompleted;
        
        /// <remarks/>
        public event GetLifeProductTypeCompletedEventHandler GetLifeProductTypeCompleted;
        
        /// <remarks/>
        public event GetAnnuityGuaranteePeriodCompletedEventHandler GetAnnuityGuaranteePeriodCompleted;
        
        /// <remarks/>
        public event GetAnnuitypaymentfreqCompletedEventHandler GetAnnuitypaymentfreqCompleted;
        
        /// <remarks/>
        public event GetAnnuitypayOutFreqCompletedEventHandler GetAnnuitypayOutFreqCompleted;
        
        /// <remarks/>
        public event GetClientDetailsCompletedEventHandler GetClientDetailsCompleted;
        
        /// <remarks/>
        public event SubmitPaymentRecordCompletedEventHandler SubmitPaymentRecordCompleted;
        
        /// <remarks/>
        public event SubmitPaymentRecord1CompletedEventHandler SubmitPaymentRecord1Completed;
        
        /// <remarks/>
        public event PostHomeShieldCompletedEventHandler PostHomeShieldCompleted;
        
        /// <remarks/>
        public event PostHomeShield1CompletedEventHandler PostHomeShield1Completed;
        
        /// <remarks/>
        public event PostSafetyPlusCompletedEventHandler PostSafetyPlusCompleted;
        
        /// <remarks/>
        public event PostSafetyPlus1CompletedEventHandler PostSafetyPlus1Completed;
        
        /// <remarks/>
        public event POSTMotorRecCompletedEventHandler POSTMotorRecCompleted;
        
        /// <remarks/>
        public event POSTOtherMotorRecCompletedEventHandler POSTOtherMotorRecCompleted;
        
        /// <remarks/>
        public event POSTMotorRec1CompletedEventHandler POSTMotorRec1Completed;
        
        /// <remarks/>
        public event GetMotorPolicyDetailsCompletedEventHandler GetMotorPolicyDetailsCompleted;
        
        /// <remarks/>
        public event GetLifeProductFrequencyCompletedEventHandler GetLifeProductFrequencyCompleted;
        
        /// <remarks/>
        public event GetLifeQuoteTermCompletedEventHandler GetLifeQuoteTermCompleted;
        
        /// <remarks/>
        public event GetLifeCoverTypeCompletedEventHandler GetLifeCoverTypeCompleted;
        
        /// <remarks/>
        public event CreateLifeClientCompletedEventHandler CreateLifeClientCompleted;
        
        /// <remarks/>
        public event GetLifeQuoteCompletedEventHandler GetLifeQuoteCompleted;
        
        /// <remarks/>
        public event GetCitiesCompletedEventHandler GetCitiesCompleted;
        
        /// <remarks/>
        public event POSTTravelRecCompletedEventHandler POSTTravelRecCompleted;
        
        /// <remarks/>
        public event POSTMultipleTravelRecCompletedEventHandler POSTMultipleTravelRecCompleted;
        
        /// <remarks/>
        public event POSTTravelRec1CompletedEventHandler POSTTravelRec1Completed;
        
        /// <remarks/>
        public event GetlifePolicyBalancesCompletedEventHandler GetlifePolicyBalancesCompleted;
        
        /// <remarks/>
        public event GetTravelQuoteCompletedEventHandler GetTravelQuoteCompleted;
        
        /// <remarks/>
        public event GetMotorQuoteCompletedEventHandler GetMotorQuoteCompleted;
        
        /// <remarks/>
        public event GetHomeShieldQuoteCompletedEventHandler GetHomeShieldQuoteCompleted;
        
        /// <remarks/>
        public event GetSafetyplusQuoteCompletedEventHandler GetSafetyplusQuoteCompleted;
        
        /// <remarks/>
        public event POSTNotificationDetCompletedEventHandler POSTNotificationDetCompleted;
        
        /// <remarks/>
        public event NotEMAILCompletedEventHandler NotEMAILCompleted;
        
        /// <remarks/>
        public event GetConfirmTelCompletedEventHandler GetConfirmTelCompleted;
        
        /// <remarks/>
        public event SubmitRenewBusinessPayRecCompletedEventHandler SubmitRenewBusinessPayRecCompleted;
        
        /// <remarks/>
        public event PostTQSyncCompletedEventHandler PostTQSyncCompleted;
        
        /// <remarks/>
        public event PostABSSyncCompletedEventHandler PostABSSyncCompleted;
        
        /// <remarks/>
        public event GetTQproposalNumCompletedEventHandler GetTQproposalNumCompleted;
        
        /// <remarks/>
        public event PostMarineRecCompletedEventHandler PostMarineRecCompleted;
        
        /// <remarks/>
        public event PostTravel2RagaCompletedEventHandler PostTravel2RagaCompleted;
        
        /// <remarks/>
        public event PostTravelRagaOldCompletedEventHandler PostTravelRagaOldCompleted;
        
        /// <remarks/>
        public event PostTravel2RagaArrayCompletedEventHandler PostTravel2RagaArrayCompleted;
        
        /// <remarks/>
        public event POSTBrokerMotorRecCompletedEventHandler POSTBrokerMotorRecCompleted;
        
        /// <remarks/>
        public event POSTBrokerTravelRecCompletedEventHandler POSTBrokerTravelRecCompleted;
        
        /// <remarks/>
        public event GetBrokerMotorQuoteCompletedEventHandler GetBrokerMotorQuoteCompleted;
        
        /// <remarks/>
        public event PostBrokerHouseHolderCompletedEventHandler PostBrokerHouseHolderCompleted;
        
        /// <remarks/>
        public event GetHouseHolderQuoteCompletedEventHandler GetHouseHolderQuoteCompleted;
        
        /// <remarks/>
        public event SubmitClaimRegister1CompletedEventHandler SubmitClaimRegister1Completed;
        
        /// <remarks/>
        public event PostClaimsUpdateCompletedEventHandler PostClaimsUpdateCompleted;
        
        /// <remarks/>
        public event GetMorePolicyDetailsCompletedEventHandler GetMorePolicyDetailsCompleted;
        
        /// <remarks/>
        public event GetCRM_ActivePoliciesCompletedEventHandler GetCRM_ActivePoliciesCompleted;
        
        /// <remarks/>
        public event GetCRM_CustomersCompletedEventHandler GetCRM_CustomersCompleted;
        
        /// <remarks/>
        public event GetCRM_ActiveCustomersCompletedEventHandler GetCRM_ActiveCustomersCompleted;
        
        /// <remarks/>
        public event GetCRM_AllPoliciesCompletedEventHandler GetCRM_AllPoliciesCompleted;
        
        /// <remarks/>
        public event GetCRM_PolicyRenewalCompletedEventHandler GetCRM_PolicyRenewalCompleted;
        
        /// <remarks/>
        public event GetCRM_BirthdayCompletedEventHandler GetCRM_BirthdayCompleted;
        
        /// <remarks/>
        public event GetCRM_ClaimsCompletedEventHandler GetCRM_ClaimsCompleted;
        
        /// <remarks/>
        public event GetCRM_DashBoardCompletedEventHandler GetCRM_DashBoardCompleted;
        
        /// <remarks/>
        public event GetCRM_PolicyDetailCompletedEventHandler GetCRM_PolicyDetailCompleted;
        
        /// <remarks/>
        public event GetCRM_ClaimsDetailCompletedEventHandler GetCRM_ClaimsDetailCompleted;
        
        /// <remarks/>
        public event ABSMotorInterestCompletedEventHandler ABSMotorInterestCompleted;
        
        /// <remarks/>
        public event POSTNNPCTravelRecCompletedEventHandler POSTNNPCTravelRecCompleted;
        
        /// <remarks/>
        public event GetCRM_ClaimCountCompletedEventHandler GetCRM_ClaimCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_NIIDData", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ABSNIID[] GetCRM_NIIDData(string BusinessUnit, string ABSID, string Pages) {
            object[] results = this.Invoke("GetCRM_NIIDData", new object[] {
                        BusinessUnit,
                        ABSID,
                        Pages});
            return ((ABSNIID[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_NIIDDataAsync(string BusinessUnit, string ABSID, string Pages) {
            this.GetCRM_NIIDDataAsync(BusinessUnit, ABSID, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_NIIDDataAsync(string BusinessUnit, string ABSID, string Pages, object userState) {
            if ((this.GetCRM_NIIDDataOperationCompleted == null)) {
                this.GetCRM_NIIDDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_NIIDDataOperationCompleted);
            }
            this.InvokeAsync("GetCRM_NIIDData", new object[] {
                        BusinessUnit,
                        ABSID,
                        Pages}, this.GetCRM_NIIDDataOperationCompleted, userState);
        }
        
        private void OnGetCRM_NIIDDataOperationCompleted(object arg) {
            if ((this.GetCRM_NIIDDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_NIIDDataCompleted(this, new GetCRM_NIIDDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_LapseDetail", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CRM_ClaimsDetail[] GetCRM_LapseDetail(string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_LapseDetail", new object[] {
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((CRM_ClaimsDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_LapseDetailAsync(string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_LapseDetailAsync(Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_LapseDetailAsync(string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_LapseDetailOperationCompleted == null)) {
                this.GetCRM_LapseDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_LapseDetailOperationCompleted);
            }
            this.InvokeAsync("GetCRM_LapseDetail", new object[] {
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_LapseDetailOperationCompleted, userState);
        }
        
        private void OnGetCRM_LapseDetailOperationCompleted(object arg) {
            if ((this.GetCRM_LapseDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_LapseDetailCompleted(this, new GetCRM_LapseDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetPPTDetails", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClientData[] GetPPTDetails(string Subsidiary, string PolicyNo) {
            object[] results = this.Invoke("GetPPTDetails", new object[] {
                        Subsidiary,
                        PolicyNo});
            return ((ClientData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPPTDetailsAsync(string Subsidiary, string PolicyNo) {
            this.GetPPTDetailsAsync(Subsidiary, PolicyNo, null);
        }
        
        /// <remarks/>
        public void GetPPTDetailsAsync(string Subsidiary, string PolicyNo, object userState) {
            if ((this.GetPPTDetailsOperationCompleted == null)) {
                this.GetPPTDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPTDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPPTDetails", new object[] {
                        Subsidiary,
                        PolicyNo}, this.GetPPTDetailsOperationCompleted, userState);
        }
        
        private void OnGetPPTDetailsOperationCompleted(object arg) {
            if ((this.GetPPTDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPTDetailsCompleted(this, new GetPPTDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_Top10", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CRM_Top10Det[] GetCRM_Top10(string Subsidiary, string BusinessUnit) {
            object[] results = this.Invoke("GetCRM_Top10", new object[] {
                        Subsidiary,
                        BusinessUnit});
            return ((CRM_Top10Det[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_Top10Async(string Subsidiary, string BusinessUnit) {
            this.GetCRM_Top10Async(Subsidiary, BusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetCRM_Top10Async(string Subsidiary, string BusinessUnit, object userState) {
            if ((this.GetCRM_Top10OperationCompleted == null)) {
                this.GetCRM_Top10OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_Top10OperationCompleted);
            }
            this.InvokeAsync("GetCRM_Top10", new object[] {
                        Subsidiary,
                        BusinessUnit}, this.GetCRM_Top10OperationCompleted, userState);
        }
        
        private void OnGetCRM_Top10OperationCompleted(object arg) {
            if ((this.GetCRM_Top10Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_Top10Completed(this, new GetCRM_Top10CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_TopProductlines", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CRM_TopProduct[] GetCRM_TopProductlines(string Subsidiary, string Products, string BusinessUnit) {
            object[] results = this.Invoke("GetCRM_TopProductlines", new object[] {
                        Subsidiary,
                        Products,
                        BusinessUnit});
            return ((CRM_TopProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_TopProductlinesAsync(string Subsidiary, string Products, string BusinessUnit) {
            this.GetCRM_TopProductlinesAsync(Subsidiary, Products, BusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetCRM_TopProductlinesAsync(string Subsidiary, string Products, string BusinessUnit, object userState) {
            if ((this.GetCRM_TopProductlinesOperationCompleted == null)) {
                this.GetCRM_TopProductlinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_TopProductlinesOperationCompleted);
            }
            this.InvokeAsync("GetCRM_TopProductlines", new object[] {
                        Subsidiary,
                        Products,
                        BusinessUnit}, this.GetCRM_TopProductlinesOperationCompleted, userState);
        }
        
        private void OnGetCRM_TopProductlinesOperationCompleted(object arg) {
            if ((this.GetCRM_TopProductlinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_TopProductlinesCompleted(this, new GetCRM_TopProductlinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_TobeRenewed", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public To_be_renewed[] GetCRM_TobeRenewed(string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_TobeRenewed", new object[] {
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((To_be_renewed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_TobeRenewedAsync(string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_TobeRenewedAsync(Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_TobeRenewedAsync(string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_TobeRenewedOperationCompleted == null)) {
                this.GetCRM_TobeRenewedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_TobeRenewedOperationCompleted);
            }
            this.InvokeAsync("GetCRM_TobeRenewed", new object[] {
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_TobeRenewedOperationCompleted, userState);
        }
        
        private void OnGetCRM_TobeRenewedOperationCompleted(object arg) {
            if ((this.GetCRM_TobeRenewedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_TobeRenewedCompleted(this, new GetCRM_TobeRenewedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_Broker", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BrokerData[] GetCRM_Broker(string Pages) {
            object[] results = this.Invoke("GetCRM_Broker", new object[] {
                        Pages});
            return ((BrokerData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_BrokerAsync(string Pages) {
            this.GetCRM_BrokerAsync(Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_BrokerAsync(string Pages, object userState) {
            if ((this.GetCRM_BrokerOperationCompleted == null)) {
                this.GetCRM_BrokerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_BrokerOperationCompleted);
            }
            this.InvokeAsync("GetCRM_Broker", new object[] {
                        Pages}, this.GetCRM_BrokerOperationCompleted, userState);
        }
        
        private void OnGetCRM_BrokerOperationCompleted(object arg) {
            if ((this.GetCRM_BrokerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_BrokerCompleted(this, new GetCRM_BrokerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Broker_Motor", RequestElementName="Passing_Broker_Motor", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Broker_MotorResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_Broker_MotorResult")]
        public string POSTBrokerMotor(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string mAddress, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string RenewPolNo) {
            object[] results = this.Invoke("POSTBrokerMotor", new object[] {
                        MerchantID,
                        Mpassword,
                        CustomerName,
                        mAddress,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo,
                        PostSource,
                        PostType,
                        BrokerID,
                        CommRate,
                        PremRate,
                        RenewPolNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void POSTBrokerMotorAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string mAddress, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string RenewPolNo) {
            this.POSTBrokerMotorAsync(MerchantID, Mpassword, CustomerName, mAddress, PhoneNumber, Email, EngineNumber, InsuranceType, Premium, SumInsured, ChassisNumber, RegistrationNumber, VehicleModel, VehicleCategory, VehicleColor, VehicleMake, VehicleType, YearOfMake, dateCreated, Activedate, expiryDate, CreditNote, PrnNo, PostSource, PostType, BrokerID, CommRate, PremRate, RenewPolNo, null);
        }
        
        /// <remarks/>
        public void POSTBrokerMotorAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string mAddress, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string RenewPolNo, 
                    object userState) {
            if ((this.POSTBrokerMotorOperationCompleted == null)) {
                this.POSTBrokerMotorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTBrokerMotorOperationCompleted);
            }
            this.InvokeAsync("POSTBrokerMotor", new object[] {
                        MerchantID,
                        Mpassword,
                        CustomerName,
                        mAddress,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo,
                        PostSource,
                        PostType,
                        BrokerID,
                        CommRate,
                        PremRate,
                        RenewPolNo}, this.POSTBrokerMotorOperationCompleted, userState);
        }
        
        private void OnPOSTBrokerMotorOperationCompleted(object arg) {
            if ((this.POSTBrokerMotorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTBrokerMotorCompleted(this, new POSTBrokerMotorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetPassportDetails", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PassportDetails GetPassportDetails(string MerchantID, string MerchantPWD, string PassportNumber) {
            object[] results = this.Invoke("GetPassportDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        PassportNumber});
            return ((PassportDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetPassportDetailsAsync(string MerchantID, string MerchantPWD, string PassportNumber) {
            this.GetPassportDetailsAsync(MerchantID, MerchantPWD, PassportNumber, null);
        }
        
        /// <remarks/>
        public void GetPassportDetailsAsync(string MerchantID, string MerchantPWD, string PassportNumber, object userState) {
            if ((this.GetPassportDetailsOperationCompleted == null)) {
                this.GetPassportDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPassportDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPassportDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        PassportNumber}, this.GetPassportDetailsOperationCompleted, userState);
        }
        
        private void OnGetPassportDetailsOperationCompleted(object arg) {
            if ((this.GetPassportDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPassportDetailsCompleted(this, new GetPassportDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetClaimStatus", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Claimfl GetClaimStatus(string ClaimsNumb) {
            object[] results = this.Invoke("GetClaimStatus", new object[] {
                        ClaimsNumb});
            return ((Claimfl)(results[0]));
        }
        
        /// <remarks/>
        public void GetClaimStatusAsync(string ClaimsNumb) {
            this.GetClaimStatusAsync(ClaimsNumb, null);
        }
        
        /// <remarks/>
        public void GetClaimStatusAsync(string ClaimsNumb, object userState) {
            if ((this.GetClaimStatusOperationCompleted == null)) {
                this.GetClaimStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClaimStatusOperationCompleted);
            }
            this.InvokeAsync("GetClaimStatus", new object[] {
                        ClaimsNumb}, this.GetClaimStatusOperationCompleted, userState);
        }
        
        private void OnGetClaimStatusOperationCompleted(object arg) {
            if ((this.GetClaimStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClaimStatusCompleted(this, new GetClaimStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetContactClaim", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Claimfl GetContactClaim(string ClaimsNumb, string TelNumber) {
            object[] results = this.Invoke("GetContactClaim", new object[] {
                        ClaimsNumb,
                        TelNumber});
            return ((Claimfl)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactClaimAsync(string ClaimsNumb, string TelNumber) {
            this.GetContactClaimAsync(ClaimsNumb, TelNumber, null);
        }
        
        /// <remarks/>
        public void GetContactClaimAsync(string ClaimsNumb, string TelNumber, object userState) {
            if ((this.GetContactClaimOperationCompleted == null)) {
                this.GetContactClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactClaimOperationCompleted);
            }
            this.InvokeAsync("GetContactClaim", new object[] {
                        ClaimsNumb,
                        TelNumber}, this.GetContactClaimOperationCompleted, userState);
        }
        
        private void OnGetContactClaimOperationCompleted(object arg) {
            if ((this.GetContactClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactClaimCompleted(this, new GetContactClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetPolicyValidation", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PolValidation GetPolicyValidation(string polcode) {
            object[] results = this.Invoke("GetPolicyValidation", new object[] {
                        polcode});
            return ((PolValidation)(results[0]));
        }
        
        /// <remarks/>
        public void GetPolicyValidationAsync(string polcode) {
            this.GetPolicyValidationAsync(polcode, null);
        }
        
        /// <remarks/>
        public void GetPolicyValidationAsync(string polcode, object userState) {
            if ((this.GetPolicyValidationOperationCompleted == null)) {
                this.GetPolicyValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPolicyValidationOperationCompleted);
            }
            this.InvokeAsync("GetPolicyValidation", new object[] {
                        polcode}, this.GetPolicyValidationOperationCompleted, userState);
        }
        
        private void OnGetPolicyValidationOperationCompleted(object arg) {
            if ((this.GetPolicyValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPolicyValidationCompleted(this, new GetPolicyValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetPolicyExpiryDate", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PolExpDate GetPolicyExpiryDate(string MerchantID, string MerchantPWD, string Subsidiary, string policyNo) {
            object[] results = this.Invoke("GetPolicyExpiryDate", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Subsidiary,
                        policyNo});
            return ((PolExpDate)(results[0]));
        }
        
        /// <remarks/>
        public void GetPolicyExpiryDateAsync(string MerchantID, string MerchantPWD, string Subsidiary, string policyNo) {
            this.GetPolicyExpiryDateAsync(MerchantID, MerchantPWD, Subsidiary, policyNo, null);
        }
        
        /// <remarks/>
        public void GetPolicyExpiryDateAsync(string MerchantID, string MerchantPWD, string Subsidiary, string policyNo, object userState) {
            if ((this.GetPolicyExpiryDateOperationCompleted == null)) {
                this.GetPolicyExpiryDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPolicyExpiryDateOperationCompleted);
            }
            this.InvokeAsync("GetPolicyExpiryDate", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Subsidiary,
                        policyNo}, this.GetPolicyExpiryDateOperationCompleted, userState);
        }
        
        private void OnGetPolicyExpiryDateOperationCompleted(object arg) {
            if ((this.GetPolicyExpiryDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPolicyExpiryDateCompleted(this, new GetPolicyExpiryDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetPolicyDetails", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PolicyDet GetPolicyDetails(string MerchantID, string MerchantPWD, string Subsidiary, string PolicyNumber) {
            object[] results = this.Invoke("GetPolicyDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Subsidiary,
                        PolicyNumber});
            return ((PolicyDet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPolicyDetailsAsync(string MerchantID, string MerchantPWD, string Subsidiary, string PolicyNumber) {
            this.GetPolicyDetailsAsync(MerchantID, MerchantPWD, Subsidiary, PolicyNumber, null);
        }
        
        /// <remarks/>
        public void GetPolicyDetailsAsync(string MerchantID, string MerchantPWD, string Subsidiary, string PolicyNumber, object userState) {
            if ((this.GetPolicyDetailsOperationCompleted == null)) {
                this.GetPolicyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPolicyDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPolicyDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Subsidiary,
                        PolicyNumber}, this.GetPolicyDetailsOperationCompleted, userState);
        }
        
        private void OnGetPolicyDetailsOperationCompleted(object arg) {
            if ((this.GetPolicyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPolicyDetailsCompleted(this, new GetPolicyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Generating_Claims_Number", RequestElementName="Generating_Claims_Number", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Generating_Claims_NumberResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Generating_Claims_NumberResult")]
        public ClaimRegStatus SubmitClaimRegister(string MerchantID, string MerchantPWD, string Fullname, string Address, string Email, string Telephone, string PolicyNo, string lossDescription, System.DateTime DateofLoss, string VehicleReg, string ClaimsAmt) {
            object[] results = this.Invoke("SubmitClaimRegister", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Fullname,
                        Address,
                        Email,
                        Telephone,
                        PolicyNo,
                        lossDescription,
                        DateofLoss,
                        VehicleReg,
                        ClaimsAmt});
            return ((ClaimRegStatus)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitClaimRegisterAsync(string MerchantID, string MerchantPWD, string Fullname, string Address, string Email, string Telephone, string PolicyNo, string lossDescription, System.DateTime DateofLoss, string VehicleReg, string ClaimsAmt) {
            this.SubmitClaimRegisterAsync(MerchantID, MerchantPWD, Fullname, Address, Email, Telephone, PolicyNo, lossDescription, DateofLoss, VehicleReg, ClaimsAmt, null);
        }
        
        /// <remarks/>
        public void SubmitClaimRegisterAsync(string MerchantID, string MerchantPWD, string Fullname, string Address, string Email, string Telephone, string PolicyNo, string lossDescription, System.DateTime DateofLoss, string VehicleReg, string ClaimsAmt, object userState) {
            if ((this.SubmitClaimRegisterOperationCompleted == null)) {
                this.SubmitClaimRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitClaimRegisterOperationCompleted);
            }
            this.InvokeAsync("SubmitClaimRegister", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Fullname,
                        Address,
                        Email,
                        Telephone,
                        PolicyNo,
                        lossDescription,
                        DateofLoss,
                        VehicleReg,
                        ClaimsAmt}, this.SubmitClaimRegisterOperationCompleted, userState);
        }
        
        private void OnSubmitClaimRegisterOperationCompleted(object arg) {
            if ((this.SubmitClaimRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitClaimRegisterCompleted(this, new SubmitClaimRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetLifeProductCateg", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLifeProductCateg() {
            object[] results = this.Invoke("GetLifeProductCateg", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLifeProductCategAsync() {
            this.GetLifeProductCategAsync(null);
        }
        
        /// <remarks/>
        public void GetLifeProductCategAsync(object userState) {
            if ((this.GetLifeProductCategOperationCompleted == null)) {
                this.GetLifeProductCategOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLifeProductCategOperationCompleted);
            }
            this.InvokeAsync("GetLifeProductCateg", new object[0], this.GetLifeProductCategOperationCompleted, userState);
        }
        
        private void OnGetLifeProductCategOperationCompleted(object arg) {
            if ((this.GetLifeProductCategCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLifeProductCategCompleted(this, new GetLifeProductCategCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetLifeProductType", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLifeProductType(int ProductCateg) {
            object[] results = this.Invoke("GetLifeProductType", new object[] {
                        ProductCateg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLifeProductTypeAsync(int ProductCateg) {
            this.GetLifeProductTypeAsync(ProductCateg, null);
        }
        
        /// <remarks/>
        public void GetLifeProductTypeAsync(int ProductCateg, object userState) {
            if ((this.GetLifeProductTypeOperationCompleted == null)) {
                this.GetLifeProductTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLifeProductTypeOperationCompleted);
            }
            this.InvokeAsync("GetLifeProductType", new object[] {
                        ProductCateg}, this.GetLifeProductTypeOperationCompleted, userState);
        }
        
        private void OnGetLifeProductTypeOperationCompleted(object arg) {
            if ((this.GetLifeProductTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLifeProductTypeCompleted(this, new GetLifeProductTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetAnnuityGuaranteePeriod", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAnnuityGuaranteePeriod(int prodCode, string popCode) {
            object[] results = this.Invoke("GetAnnuityGuaranteePeriod", new object[] {
                        prodCode,
                        popCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnnuityGuaranteePeriodAsync(int prodCode, string popCode) {
            this.GetAnnuityGuaranteePeriodAsync(prodCode, popCode, null);
        }
        
        /// <remarks/>
        public void GetAnnuityGuaranteePeriodAsync(int prodCode, string popCode, object userState) {
            if ((this.GetAnnuityGuaranteePeriodOperationCompleted == null)) {
                this.GetAnnuityGuaranteePeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnuityGuaranteePeriodOperationCompleted);
            }
            this.InvokeAsync("GetAnnuityGuaranteePeriod", new object[] {
                        prodCode,
                        popCode}, this.GetAnnuityGuaranteePeriodOperationCompleted, userState);
        }
        
        private void OnGetAnnuityGuaranteePeriodOperationCompleted(object arg) {
            if ((this.GetAnnuityGuaranteePeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnnuityGuaranteePeriodCompleted(this, new GetAnnuityGuaranteePeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetAnnuitypaymentfreq", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAnnuitypaymentfreq(int prodCode, string popCode) {
            object[] results = this.Invoke("GetAnnuitypaymentfreq", new object[] {
                        prodCode,
                        popCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnnuitypaymentfreqAsync(int prodCode, string popCode) {
            this.GetAnnuitypaymentfreqAsync(prodCode, popCode, null);
        }
        
        /// <remarks/>
        public void GetAnnuitypaymentfreqAsync(int prodCode, string popCode, object userState) {
            if ((this.GetAnnuitypaymentfreqOperationCompleted == null)) {
                this.GetAnnuitypaymentfreqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnuitypaymentfreqOperationCompleted);
            }
            this.InvokeAsync("GetAnnuitypaymentfreq", new object[] {
                        prodCode,
                        popCode}, this.GetAnnuitypaymentfreqOperationCompleted, userState);
        }
        
        private void OnGetAnnuitypaymentfreqOperationCompleted(object arg) {
            if ((this.GetAnnuitypaymentfreqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnnuitypaymentfreqCompleted(this, new GetAnnuitypaymentfreqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetAnnuitypayOutFreq", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAnnuitypayOutFreq(int webProdCode) {
            object[] results = this.Invoke("GetAnnuitypayOutFreq", new object[] {
                        webProdCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnnuitypayOutFreqAsync(int webProdCode) {
            this.GetAnnuitypayOutFreqAsync(webProdCode, null);
        }
        
        /// <remarks/>
        public void GetAnnuitypayOutFreqAsync(int webProdCode, object userState) {
            if ((this.GetAnnuitypayOutFreqOperationCompleted == null)) {
                this.GetAnnuitypayOutFreqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnuitypayOutFreqOperationCompleted);
            }
            this.InvokeAsync("GetAnnuitypayOutFreq", new object[] {
                        webProdCode}, this.GetAnnuitypayOutFreqOperationCompleted, userState);
        }
        
        private void OnGetAnnuitypayOutFreqOperationCompleted(object arg) {
            if ((this.GetAnnuitypayOutFreqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnnuitypayOutFreqCompleted(this, new GetAnnuitypayOutFreqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetClientDetails", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClientData GetClientDetails(string MerchantID, string MerchantPWD, string Telephone, string PolicyNo) {
            object[] results = this.Invoke("GetClientDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Telephone,
                        PolicyNo});
            return ((ClientData)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientDetailsAsync(string MerchantID, string MerchantPWD, string Telephone, string PolicyNo) {
            this.GetClientDetailsAsync(MerchantID, MerchantPWD, Telephone, PolicyNo, null);
        }
        
        /// <remarks/>
        public void GetClientDetailsAsync(string MerchantID, string MerchantPWD, string Telephone, string PolicyNo, object userState) {
            if ((this.GetClientDetailsOperationCompleted == null)) {
                this.GetClientDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientDetailsOperationCompleted);
            }
            this.InvokeAsync("GetClientDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Telephone,
                        PolicyNo}, this.GetClientDetailsOperationCompleted, userState);
        }
        
        private void OnGetClientDetailsOperationCompleted(object arg) {
            if ((this.GetClientDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientDetailsCompleted(this, new GetClientDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Payment_PostSource", RequestElementName="Passing_Payment_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Payment_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_Payment_PostSourceResult")]
        public string SubmitPaymentRecord(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string Company, 
                    string PaymentNarrtn, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string PostSource, 
                    string PostType) {
            object[] results = this.Invoke("SubmitPaymentRecord", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        Company,
                        PaymentNarrtn,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        Premium,
                        SumInsured,
                        PostSource,
                        PostType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitPaymentRecordAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string Company, 
                    string PaymentNarrtn, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string PostSource, 
                    string PostType) {
            this.SubmitPaymentRecordAsync(MerchantID, Mpassword, PolicyNo, Company, PaymentNarrtn, DateOfBirth, startdate, ReferenceNo, FirstName, LastName, Title, Address, PhoneNumber, Email, PolicyTerm, PaymentFreq, PaymentPayOutFreq, ProductType, Premium, SumInsured, PostSource, PostType, null);
        }
        
        /// <remarks/>
        public void SubmitPaymentRecordAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string Company, 
                    string PaymentNarrtn, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string PostSource, 
                    string PostType, 
                    object userState) {
            if ((this.SubmitPaymentRecordOperationCompleted == null)) {
                this.SubmitPaymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitPaymentRecordOperationCompleted);
            }
            this.InvokeAsync("SubmitPaymentRecord", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        Company,
                        PaymentNarrtn,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        Premium,
                        SumInsured,
                        PostSource,
                        PostType}, this.SubmitPaymentRecordOperationCompleted, userState);
        }
        
        private void OnSubmitPaymentRecordOperationCompleted(object arg) {
            if ((this.SubmitPaymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitPaymentRecordCompleted(this, new SubmitPaymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="SubmitPaymentRecord1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/SubmitPaymentRecord", RequestElementName="SubmitPaymentRecord", RequestNamespace="http://Custodianservices.com/", ResponseElementName="SubmitPaymentRecordResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SubmitPaymentRecordResult")]
        public string SubmitPaymentRecord(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string Company, 
                    string PaymentNarrtn, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    decimal Premium, 
                    decimal SumInsured) {
            object[] results = this.Invoke("SubmitPaymentRecord1", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        Company,
                        PaymentNarrtn,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        Premium,
                        SumInsured});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitPaymentRecord1Async(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string Company, 
                    string PaymentNarrtn, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    decimal Premium, 
                    decimal SumInsured) {
            this.SubmitPaymentRecord1Async(MerchantID, Mpassword, PolicyNo, Company, PaymentNarrtn, DateOfBirth, startdate, ReferenceNo, FirstName, LastName, Title, Address, PhoneNumber, Email, PolicyTerm, PaymentFreq, PaymentPayOutFreq, ProductType, Premium, SumInsured, null);
        }
        
        /// <remarks/>
        public void SubmitPaymentRecord1Async(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string Company, 
                    string PaymentNarrtn, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    object userState) {
            if ((this.SubmitPaymentRecord1OperationCompleted == null)) {
                this.SubmitPaymentRecord1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitPaymentRecord1OperationCompleted);
            }
            this.InvokeAsync("SubmitPaymentRecord1", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        Company,
                        PaymentNarrtn,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        Premium,
                        SumInsured}, this.SubmitPaymentRecord1OperationCompleted, userState);
        }
        
        private void OnSubmitPaymentRecord1OperationCompleted(object arg) {
            if ((this.SubmitPaymentRecord1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitPaymentRecord1Completed(this, new SubmitPaymentRecord1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_HomeShield_PostSource", RequestElementName="Passing_HomeShield_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_HomeShield_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_HomeShield_PostSourceResult")]
        public string PostHomeShield(string UserName, string Mpassword, string CustomerName, string Address, string PhoneNumber, string Email, string Occupation, decimal Premium, decimal NoOfUnit, System.DateTime dateCreated, System.DateTime Activedate, System.DateTime expiryDate, string CreditNote, string mDescription, string PostSource) {
            object[] results = this.Invoke("PostHomeShield", new object[] {
                        UserName,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        Occupation,
                        Premium,
                        NoOfUnit,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        mDescription,
                        PostSource});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostHomeShieldAsync(string UserName, string Mpassword, string CustomerName, string Address, string PhoneNumber, string Email, string Occupation, decimal Premium, decimal NoOfUnit, System.DateTime dateCreated, System.DateTime Activedate, System.DateTime expiryDate, string CreditNote, string mDescription, string PostSource) {
            this.PostHomeShieldAsync(UserName, Mpassword, CustomerName, Address, PhoneNumber, Email, Occupation, Premium, NoOfUnit, dateCreated, Activedate, expiryDate, CreditNote, mDescription, PostSource, null);
        }
        
        /// <remarks/>
        public void PostHomeShieldAsync(
                    string UserName, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string Occupation, 
                    decimal Premium, 
                    decimal NoOfUnit, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string mDescription, 
                    string PostSource, 
                    object userState) {
            if ((this.PostHomeShieldOperationCompleted == null)) {
                this.PostHomeShieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostHomeShieldOperationCompleted);
            }
            this.InvokeAsync("PostHomeShield", new object[] {
                        UserName,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        Occupation,
                        Premium,
                        NoOfUnit,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        mDescription,
                        PostSource}, this.PostHomeShieldOperationCompleted, userState);
        }
        
        private void OnPostHomeShieldOperationCompleted(object arg) {
            if ((this.PostHomeShieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostHomeShieldCompleted(this, new PostHomeShieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="PostHomeShield1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/PostHomeShield", RequestElementName="PostHomeShield", RequestNamespace="http://Custodianservices.com/", ResponseElementName="PostHomeShieldResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PostHomeShieldResult")]
        public string PostHomeShield(string UserName, string Mpassword, string CustomerName, string Address, string PhoneNumber, string Email, string Occupation, decimal Premium, decimal NoOfUnit, System.DateTime dateCreated, System.DateTime Activedate, System.DateTime expiryDate, string CreditNote, string mDescription) {
            object[] results = this.Invoke("PostHomeShield1", new object[] {
                        UserName,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        Occupation,
                        Premium,
                        NoOfUnit,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        mDescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostHomeShield1Async(string UserName, string Mpassword, string CustomerName, string Address, string PhoneNumber, string Email, string Occupation, decimal Premium, decimal NoOfUnit, System.DateTime dateCreated, System.DateTime Activedate, System.DateTime expiryDate, string CreditNote, string mDescription) {
            this.PostHomeShield1Async(UserName, Mpassword, CustomerName, Address, PhoneNumber, Email, Occupation, Premium, NoOfUnit, dateCreated, Activedate, expiryDate, CreditNote, mDescription, null);
        }
        
        /// <remarks/>
        public void PostHomeShield1Async(string UserName, string Mpassword, string CustomerName, string Address, string PhoneNumber, string Email, string Occupation, decimal Premium, decimal NoOfUnit, System.DateTime dateCreated, System.DateTime Activedate, System.DateTime expiryDate, string CreditNote, string mDescription, object userState) {
            if ((this.PostHomeShield1OperationCompleted == null)) {
                this.PostHomeShield1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostHomeShield1OperationCompleted);
            }
            this.InvokeAsync("PostHomeShield1", new object[] {
                        UserName,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        Occupation,
                        Premium,
                        NoOfUnit,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        mDescription}, this.PostHomeShield1OperationCompleted, userState);
        }
        
        private void OnPostHomeShield1OperationCompleted(object arg) {
            if ((this.PostHomeShield1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostHomeShield1Completed(this, new PostHomeShield1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_SafetyPlus_PostSource", RequestElementName="Passing_SafetyPlus_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_SafetyPlus_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_SafetyPlus_PostSourceResult")]
        public string PostSafetyPlus(
                    string UserName, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string Occupation, 
                    decimal Premium, 
                    decimal NoOfUnit, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string mDescription, 
                    string BeneficiaryName, 
                    string BeneficiarySex, 
                    System.DateTime BeneficiaryDOB, 
                    string BeneficiaryRelatn, 
                    string PostSource) {
            object[] results = this.Invoke("PostSafetyPlus", new object[] {
                        UserName,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        Occupation,
                        Premium,
                        NoOfUnit,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        mDescription,
                        BeneficiaryName,
                        BeneficiarySex,
                        BeneficiaryDOB,
                        BeneficiaryRelatn,
                        PostSource});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostSafetyPlusAsync(
                    string UserName, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string Occupation, 
                    decimal Premium, 
                    decimal NoOfUnit, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string mDescription, 
                    string BeneficiaryName, 
                    string BeneficiarySex, 
                    System.DateTime BeneficiaryDOB, 
                    string BeneficiaryRelatn, 
                    string PostSource) {
            this.PostSafetyPlusAsync(UserName, Mpassword, CustomerName, Address, PhoneNumber, Email, Occupation, Premium, NoOfUnit, dateCreated, Activedate, expiryDate, CreditNote, mDescription, BeneficiaryName, BeneficiarySex, BeneficiaryDOB, BeneficiaryRelatn, PostSource, null);
        }
        
        /// <remarks/>
        public void PostSafetyPlusAsync(
                    string UserName, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string Occupation, 
                    decimal Premium, 
                    decimal NoOfUnit, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string mDescription, 
                    string BeneficiaryName, 
                    string BeneficiarySex, 
                    System.DateTime BeneficiaryDOB, 
                    string BeneficiaryRelatn, 
                    string PostSource, 
                    object userState) {
            if ((this.PostSafetyPlusOperationCompleted == null)) {
                this.PostSafetyPlusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostSafetyPlusOperationCompleted);
            }
            this.InvokeAsync("PostSafetyPlus", new object[] {
                        UserName,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        Occupation,
                        Premium,
                        NoOfUnit,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        mDescription,
                        BeneficiaryName,
                        BeneficiarySex,
                        BeneficiaryDOB,
                        BeneficiaryRelatn,
                        PostSource}, this.PostSafetyPlusOperationCompleted, userState);
        }
        
        private void OnPostSafetyPlusOperationCompleted(object arg) {
            if ((this.PostSafetyPlusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostSafetyPlusCompleted(this, new PostSafetyPlusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="PostSafetyPlus1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/PostSafetyPlus", RequestElementName="PostSafetyPlus", RequestNamespace="http://Custodianservices.com/", ResponseElementName="PostSafetyPlusResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PostSafetyPlusResult")]
        public string PostSafetyPlus(
                    string UserName, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string Occupation, 
                    decimal Premium, 
                    decimal NoOfUnit, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string mDescription, 
                    string BeneficiaryName, 
                    string BeneficiarySex, 
                    System.DateTime BeneficiaryDOB, 
                    string BeneficiaryRelatn) {
            object[] results = this.Invoke("PostSafetyPlus1", new object[] {
                        UserName,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        Occupation,
                        Premium,
                        NoOfUnit,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        mDescription,
                        BeneficiaryName,
                        BeneficiarySex,
                        BeneficiaryDOB,
                        BeneficiaryRelatn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostSafetyPlus1Async(
                    string UserName, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string Occupation, 
                    decimal Premium, 
                    decimal NoOfUnit, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string mDescription, 
                    string BeneficiaryName, 
                    string BeneficiarySex, 
                    System.DateTime BeneficiaryDOB, 
                    string BeneficiaryRelatn) {
            this.PostSafetyPlus1Async(UserName, Mpassword, CustomerName, Address, PhoneNumber, Email, Occupation, Premium, NoOfUnit, dateCreated, Activedate, expiryDate, CreditNote, mDescription, BeneficiaryName, BeneficiarySex, BeneficiaryDOB, BeneficiaryRelatn, null);
        }
        
        /// <remarks/>
        public void PostSafetyPlus1Async(
                    string UserName, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string Occupation, 
                    decimal Premium, 
                    decimal NoOfUnit, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string mDescription, 
                    string BeneficiaryName, 
                    string BeneficiarySex, 
                    System.DateTime BeneficiaryDOB, 
                    string BeneficiaryRelatn, 
                    object userState) {
            if ((this.PostSafetyPlus1OperationCompleted == null)) {
                this.PostSafetyPlus1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostSafetyPlus1OperationCompleted);
            }
            this.InvokeAsync("PostSafetyPlus1", new object[] {
                        UserName,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        Occupation,
                        Premium,
                        NoOfUnit,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        mDescription,
                        BeneficiaryName,
                        BeneficiarySex,
                        BeneficiaryDOB,
                        BeneficiaryRelatn}, this.PostSafetyPlus1OperationCompleted, userState);
        }
        
        private void OnPostSafetyPlus1OperationCompleted(object arg) {
            if ((this.PostSafetyPlus1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostSafetyPlus1Completed(this, new PostSafetyPlus1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Motor_PostSource", RequestElementName="Passing_Motor_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Motor_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_Motor_PostSourceResult")]
        public string POSTMotorRec(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    string PostSource, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate) {
            object[] results = this.Invoke("POSTMotorRec", new object[] {
                        MerchantID,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo,
                        PostSource,
                        BrokerID,
                        CommRate,
                        PremRate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void POSTMotorRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    string PostSource, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate) {
            this.POSTMotorRecAsync(MerchantID, Mpassword, CustomerName, Address, PhoneNumber, Email, EngineNumber, InsuranceType, Premium, SumInsured, ChassisNumber, RegistrationNumber, VehicleModel, VehicleCategory, VehicleColor, VehicleMake, VehicleType, YearOfMake, dateCreated, Activedate, expiryDate, CreditNote, PrnNo, PostSource, BrokerID, CommRate, PremRate, null);
        }
        
        /// <remarks/>
        public void POSTMotorRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    string PostSource, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    object userState) {
            if ((this.POSTMotorRecOperationCompleted == null)) {
                this.POSTMotorRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTMotorRecOperationCompleted);
            }
            this.InvokeAsync("POSTMotorRec", new object[] {
                        MerchantID,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo,
                        PostSource,
                        BrokerID,
                        CommRate,
                        PremRate}, this.POSTMotorRecOperationCompleted, userState);
        }
        
        private void OnPOSTMotorRecOperationCompleted(object arg) {
            if ((this.POSTMotorRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTMotorRecCompleted(this, new POSTMotorRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/POSTOtherMotorRec", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string POSTOtherMotorRec(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string FirstName, 
                    string LastName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo) {
            object[] results = this.Invoke("POSTOtherMotorRec", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        FirstName,
                        LastName,
                        Address,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void POSTOtherMotorRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string FirstName, 
                    string LastName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo) {
            this.POSTOtherMotorRecAsync(MerchantID, Mpassword, PolicyNo, FirstName, LastName, Address, PhoneNumber, Email, EngineNumber, InsuranceType, Premium, SumInsured, ChassisNumber, RegistrationNumber, VehicleModel, VehicleCategory, VehicleColor, VehicleMake, VehicleType, YearOfMake, dateCreated, Activedate, expiryDate, CreditNote, PrnNo, null);
        }
        
        /// <remarks/>
        public void POSTOtherMotorRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string FirstName, 
                    string LastName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    object userState) {
            if ((this.POSTOtherMotorRecOperationCompleted == null)) {
                this.POSTOtherMotorRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTOtherMotorRecOperationCompleted);
            }
            this.InvokeAsync("POSTOtherMotorRec", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        FirstName,
                        LastName,
                        Address,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo}, this.POSTOtherMotorRecOperationCompleted, userState);
        }
        
        private void OnPOSTOtherMotorRecOperationCompleted(object arg) {
            if ((this.POSTOtherMotorRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTOtherMotorRecCompleted(this, new POSTOtherMotorRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="POSTMotorRec1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/POSTMotorRec", RequestElementName="POSTMotorRec", RequestNamespace="http://Custodianservices.com/", ResponseElementName="POSTMotorRecResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("POSTMotorRecResult")]
        public string POSTMotorRec(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo) {
            object[] results = this.Invoke("POSTMotorRec1", new object[] {
                        MerchantID,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void POSTMotorRec1Async(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo) {
            this.POSTMotorRec1Async(MerchantID, Mpassword, CustomerName, Address, PhoneNumber, Email, EngineNumber, InsuranceType, Premium, SumInsured, ChassisNumber, RegistrationNumber, VehicleModel, VehicleCategory, VehicleColor, VehicleMake, VehicleType, YearOfMake, dateCreated, Activedate, expiryDate, CreditNote, PrnNo, null);
        }
        
        /// <remarks/>
        public void POSTMotorRec1Async(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    object userState) {
            if ((this.POSTMotorRec1OperationCompleted == null)) {
                this.POSTMotorRec1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTMotorRec1OperationCompleted);
            }
            this.InvokeAsync("POSTMotorRec1", new object[] {
                        MerchantID,
                        Mpassword,
                        CustomerName,
                        Address,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo}, this.POSTMotorRec1OperationCompleted, userState);
        }
        
        private void OnPOSTMotorRec1OperationCompleted(object arg) {
            if ((this.POSTMotorRec1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTMotorRec1Completed(this, new POSTMotorRec1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetMotorPolicyDetails", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MotorList[] GetMotorPolicyDetails(string MerchantID, string MerchantPWD, string PolicyNumber) {
            object[] results = this.Invoke("GetMotorPolicyDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        PolicyNumber});
            return ((MotorList[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMotorPolicyDetailsAsync(string MerchantID, string MerchantPWD, string PolicyNumber) {
            this.GetMotorPolicyDetailsAsync(MerchantID, MerchantPWD, PolicyNumber, null);
        }
        
        /// <remarks/>
        public void GetMotorPolicyDetailsAsync(string MerchantID, string MerchantPWD, string PolicyNumber, object userState) {
            if ((this.GetMotorPolicyDetailsOperationCompleted == null)) {
                this.GetMotorPolicyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMotorPolicyDetailsOperationCompleted);
            }
            this.InvokeAsync("GetMotorPolicyDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        PolicyNumber}, this.GetMotorPolicyDetailsOperationCompleted, userState);
        }
        
        private void OnGetMotorPolicyDetailsOperationCompleted(object arg) {
            if ((this.GetMotorPolicyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMotorPolicyDetailsCompleted(this, new GetMotorPolicyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetLifeProductFrequency", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLifeProductFrequency(int ProductCode) {
            object[] results = this.Invoke("GetLifeProductFrequency", new object[] {
                        ProductCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLifeProductFrequencyAsync(int ProductCode) {
            this.GetLifeProductFrequencyAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetLifeProductFrequencyAsync(int ProductCode, object userState) {
            if ((this.GetLifeProductFrequencyOperationCompleted == null)) {
                this.GetLifeProductFrequencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLifeProductFrequencyOperationCompleted);
            }
            this.InvokeAsync("GetLifeProductFrequency", new object[] {
                        ProductCode}, this.GetLifeProductFrequencyOperationCompleted, userState);
        }
        
        private void OnGetLifeProductFrequencyOperationCompleted(object arg) {
            if ((this.GetLifeProductFrequencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLifeProductFrequencyCompleted(this, new GetLifeProductFrequencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetLifeQuoteTerm", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLifeQuoteTerm(string ProductCode, string ClientCode) {
            object[] results = this.Invoke("GetLifeQuoteTerm", new object[] {
                        ProductCode,
                        ClientCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLifeQuoteTermAsync(string ProductCode, string ClientCode) {
            this.GetLifeQuoteTermAsync(ProductCode, ClientCode, null);
        }
        
        /// <remarks/>
        public void GetLifeQuoteTermAsync(string ProductCode, string ClientCode, object userState) {
            if ((this.GetLifeQuoteTermOperationCompleted == null)) {
                this.GetLifeQuoteTermOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLifeQuoteTermOperationCompleted);
            }
            this.InvokeAsync("GetLifeQuoteTerm", new object[] {
                        ProductCode,
                        ClientCode}, this.GetLifeQuoteTermOperationCompleted, userState);
        }
        
        private void OnGetLifeQuoteTermOperationCompleted(object arg) {
            if ((this.GetLifeQuoteTermCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLifeQuoteTermCompleted(this, new GetLifeQuoteTermCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetLifeCoverType", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLifeCoverType(string ProductCode) {
            object[] results = this.Invoke("GetLifeCoverType", new object[] {
                        ProductCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLifeCoverTypeAsync(string ProductCode) {
            this.GetLifeCoverTypeAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetLifeCoverTypeAsync(string ProductCode, object userState) {
            if ((this.GetLifeCoverTypeOperationCompleted == null)) {
                this.GetLifeCoverTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLifeCoverTypeOperationCompleted);
            }
            this.InvokeAsync("GetLifeCoverType", new object[] {
                        ProductCode}, this.GetLifeCoverTypeOperationCompleted, userState);
        }
        
        private void OnGetLifeCoverTypeOperationCompleted(object arg) {
            if ((this.GetLifeCoverTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLifeCoverTypeCompleted(this, new GetLifeCoverTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/CreateLifeClient", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateLifeClient(string ClntTitle, string ClntFName, string ClntMName, string ClntLName, System.DateTime ClntDob, string ClntGender, string ClntEmail, string ClntMobile) {
            object[] results = this.Invoke("CreateLifeClient", new object[] {
                        ClntTitle,
                        ClntFName,
                        ClntMName,
                        ClntLName,
                        ClntDob,
                        ClntGender,
                        ClntEmail,
                        ClntMobile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLifeClientAsync(string ClntTitle, string ClntFName, string ClntMName, string ClntLName, System.DateTime ClntDob, string ClntGender, string ClntEmail, string ClntMobile) {
            this.CreateLifeClientAsync(ClntTitle, ClntFName, ClntMName, ClntLName, ClntDob, ClntGender, ClntEmail, ClntMobile, null);
        }
        
        /// <remarks/>
        public void CreateLifeClientAsync(string ClntTitle, string ClntFName, string ClntMName, string ClntLName, System.DateTime ClntDob, string ClntGender, string ClntEmail, string ClntMobile, object userState) {
            if ((this.CreateLifeClientOperationCompleted == null)) {
                this.CreateLifeClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLifeClientOperationCompleted);
            }
            this.InvokeAsync("CreateLifeClient", new object[] {
                        ClntTitle,
                        ClntFName,
                        ClntMName,
                        ClntLName,
                        ClntDob,
                        ClntGender,
                        ClntEmail,
                        ClntMobile}, this.CreateLifeClientOperationCompleted, userState);
        }
        
        private void OnCreateLifeClientOperationCompleted(object arg) {
            if ((this.CreateLifeClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLifeClientCompleted(this, new CreateLifeClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetLifeQuote", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLifeQuote(int clntCode, string Premium, string SumAssured, int WebProdCode, string PaymentFreqCode, int PolicyTerm, string InterestRate) {
            object[] results = this.Invoke("GetLifeQuote", new object[] {
                        clntCode,
                        Premium,
                        SumAssured,
                        WebProdCode,
                        PaymentFreqCode,
                        PolicyTerm,
                        InterestRate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLifeQuoteAsync(int clntCode, string Premium, string SumAssured, int WebProdCode, string PaymentFreqCode, int PolicyTerm, string InterestRate) {
            this.GetLifeQuoteAsync(clntCode, Premium, SumAssured, WebProdCode, PaymentFreqCode, PolicyTerm, InterestRate, null);
        }
        
        /// <remarks/>
        public void GetLifeQuoteAsync(int clntCode, string Premium, string SumAssured, int WebProdCode, string PaymentFreqCode, int PolicyTerm, string InterestRate, object userState) {
            if ((this.GetLifeQuoteOperationCompleted == null)) {
                this.GetLifeQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLifeQuoteOperationCompleted);
            }
            this.InvokeAsync("GetLifeQuote", new object[] {
                        clntCode,
                        Premium,
                        SumAssured,
                        WebProdCode,
                        PaymentFreqCode,
                        PolicyTerm,
                        InterestRate}, this.GetLifeQuoteOperationCompleted, userState);
        }
        
        private void OnGetLifeQuoteOperationCompleted(object arg) {
            if ((this.GetLifeQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLifeQuoteCompleted(this, new GetLifeQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Travel_PostSou2344", RequestElementName="Passing_Travel_PostSou2344", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Travel_PostSou2344Response", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Passing_Travel_PostSou2344Result")]
        public string[] GetCities() {
            object[] results = this.Invoke("GetCities", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCitiesAsync() {
            this.GetCitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetCitiesAsync(object userState) {
            if ((this.GetCitiesOperationCompleted == null)) {
                this.GetCitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCitiesOperationCompleted);
            }
            this.InvokeAsync("GetCities", new object[0], this.GetCitiesOperationCompleted, userState);
        }
        
        private void OnGetCitiesOperationCompleted(object arg) {
            if ((this.GetCitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCitiesCompleted(this, new GetCitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Travel_PostSource", RequestElementName="Passing_Travel_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Travel_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_Travel_PostSourceResult")]
        public string POSTTravelRec(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string Address, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    string PostSource, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string OtherCountry, 
                    string Branch) {
            object[] results = this.Invoke("POSTTravelRec", new object[] {
                        MerchantID,
                        Mpassword,
                        Title,
                        Surname,
                        FirstName,
                        Dateofbirth,
                        Gender,
                        Nationality,
                        IdentificationType,
                        IdentificationNo,
                        Occupation,
                        PhoneNo,
                        Email,
                        Address,
                        TravelType,
                        TravelDestination,
                        TravelerDOB,
                        PeriodofInsurance,
                        Purposeoftrip,
                        DepartureDate,
                        ReturnDate,
                        totalCost,
                        ChildU18,
                        GroupCount,
                        ReferenceNo,
                        PostSource,
                        BrokerID,
                        CommRate,
                        PremRate,
                        OtherCountry,
                        Branch});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void POSTTravelRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string Address, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    string PostSource, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string OtherCountry, 
                    string Branch) {
            this.POSTTravelRecAsync(MerchantID, Mpassword, Title, Surname, FirstName, Dateofbirth, Gender, Nationality, IdentificationType, IdentificationNo, Occupation, PhoneNo, Email, Address, TravelType, TravelDestination, TravelerDOB, PeriodofInsurance, Purposeoftrip, DepartureDate, ReturnDate, totalCost, ChildU18, GroupCount, ReferenceNo, PostSource, BrokerID, CommRate, PremRate, OtherCountry, Branch, null);
        }
        
        /// <remarks/>
        public void POSTTravelRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string Address, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    string PostSource, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string OtherCountry, 
                    string Branch, 
                    object userState) {
            if ((this.POSTTravelRecOperationCompleted == null)) {
                this.POSTTravelRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTTravelRecOperationCompleted);
            }
            this.InvokeAsync("POSTTravelRec", new object[] {
                        MerchantID,
                        Mpassword,
                        Title,
                        Surname,
                        FirstName,
                        Dateofbirth,
                        Gender,
                        Nationality,
                        IdentificationType,
                        IdentificationNo,
                        Occupation,
                        PhoneNo,
                        Email,
                        Address,
                        TravelType,
                        TravelDestination,
                        TravelerDOB,
                        PeriodofInsurance,
                        Purposeoftrip,
                        DepartureDate,
                        ReturnDate,
                        totalCost,
                        ChildU18,
                        GroupCount,
                        ReferenceNo,
                        PostSource,
                        BrokerID,
                        CommRate,
                        PremRate,
                        OtherCountry,
                        Branch}, this.POSTTravelRecOperationCompleted, userState);
        }
        
        private void OnPOSTTravelRecOperationCompleted(object arg) {
            if ((this.POSTTravelRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTTravelRecCompleted(this, new POSTTravelRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Travel_PostSource_Array", RequestElementName="Passing_Travel_PostSource_Array", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Travel_PostSource_ArrayResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_Travel_PostSource_ArrayResult")]
        public mResponse POSTMultipleTravelRec(TravelInsuranceArray[] TravelDetails) {
            object[] results = this.Invoke("POSTMultipleTravelRec", new object[] {
                        TravelDetails});
            return ((mResponse)(results[0]));
        }
        
        /// <remarks/>
        public void POSTMultipleTravelRecAsync(TravelInsuranceArray[] TravelDetails) {
            this.POSTMultipleTravelRecAsync(TravelDetails, null);
        }
        
        /// <remarks/>
        public void POSTMultipleTravelRecAsync(TravelInsuranceArray[] TravelDetails, object userState) {
            if ((this.POSTMultipleTravelRecOperationCompleted == null)) {
                this.POSTMultipleTravelRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTMultipleTravelRecOperationCompleted);
            }
            this.InvokeAsync("POSTMultipleTravelRec", new object[] {
                        TravelDetails}, this.POSTMultipleTravelRecOperationCompleted, userState);
        }
        
        private void OnPOSTMultipleTravelRecOperationCompleted(object arg) {
            if ((this.POSTMultipleTravelRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTMultipleTravelRecCompleted(this, new POSTMultipleTravelRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="POSTTravelRec1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/POSTTravelRec", RequestElementName="POSTTravelRec", RequestNamespace="http://Custodianservices.com/", ResponseElementName="POSTTravelRecResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("POSTTravelRecResult")]
        public string POSTTravelRec(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string Address, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo) {
            object[] results = this.Invoke("POSTTravelRec1", new object[] {
                        MerchantID,
                        Mpassword,
                        Title,
                        Surname,
                        FirstName,
                        Dateofbirth,
                        Gender,
                        Nationality,
                        IdentificationType,
                        IdentificationNo,
                        Occupation,
                        PhoneNo,
                        Email,
                        Address,
                        TravelType,
                        TravelDestination,
                        TravelerDOB,
                        PeriodofInsurance,
                        Purposeoftrip,
                        DepartureDate,
                        ReturnDate,
                        totalCost,
                        ChildU18,
                        GroupCount,
                        ReferenceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void POSTTravelRec1Async(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string Address, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo) {
            this.POSTTravelRec1Async(MerchantID, Mpassword, Title, Surname, FirstName, Dateofbirth, Gender, Nationality, IdentificationType, IdentificationNo, Occupation, PhoneNo, Email, Address, TravelType, TravelDestination, TravelerDOB, PeriodofInsurance, Purposeoftrip, DepartureDate, ReturnDate, totalCost, ChildU18, GroupCount, ReferenceNo, null);
        }
        
        /// <remarks/>
        public void POSTTravelRec1Async(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string Address, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    object userState) {
            if ((this.POSTTravelRec1OperationCompleted == null)) {
                this.POSTTravelRec1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTTravelRec1OperationCompleted);
            }
            this.InvokeAsync("POSTTravelRec1", new object[] {
                        MerchantID,
                        Mpassword,
                        Title,
                        Surname,
                        FirstName,
                        Dateofbirth,
                        Gender,
                        Nationality,
                        IdentificationType,
                        IdentificationNo,
                        Occupation,
                        PhoneNo,
                        Email,
                        Address,
                        TravelType,
                        TravelDestination,
                        TravelerDOB,
                        PeriodofInsurance,
                        Purposeoftrip,
                        DepartureDate,
                        ReturnDate,
                        totalCost,
                        ChildU18,
                        GroupCount,
                        ReferenceNo}, this.POSTTravelRec1OperationCompleted, userState);
        }
        
        private void OnPOSTTravelRec1OperationCompleted(object arg) {
            if ((this.POSTTravelRec1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTTravelRec1Completed(this, new POSTTravelRec1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetlifePolicyBalances", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PolBalances GetlifePolicyBalances(string MerchantID, string MerchantPWD, string policyNo) {
            object[] results = this.Invoke("GetlifePolicyBalances", new object[] {
                        MerchantID,
                        MerchantPWD,
                        policyNo});
            return ((PolBalances)(results[0]));
        }
        
        /// <remarks/>
        public void GetlifePolicyBalancesAsync(string MerchantID, string MerchantPWD, string policyNo) {
            this.GetlifePolicyBalancesAsync(MerchantID, MerchantPWD, policyNo, null);
        }
        
        /// <remarks/>
        public void GetlifePolicyBalancesAsync(string MerchantID, string MerchantPWD, string policyNo, object userState) {
            if ((this.GetlifePolicyBalancesOperationCompleted == null)) {
                this.GetlifePolicyBalancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetlifePolicyBalancesOperationCompleted);
            }
            this.InvokeAsync("GetlifePolicyBalances", new object[] {
                        MerchantID,
                        MerchantPWD,
                        policyNo}, this.GetlifePolicyBalancesOperationCompleted, userState);
        }
        
        private void OnGetlifePolicyBalancesOperationCompleted(object arg) {
            if ((this.GetlifePolicyBalancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetlifePolicyBalancesCompleted(this, new GetlifePolicyBalancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetTravelQuote", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTravelQuote(System.DateTime DateOfBirth, System.DateTime DepartureDate, System.DateTime ArrivalDate, string GreographicalArea) {
            object[] results = this.Invoke("GetTravelQuote", new object[] {
                        DateOfBirth,
                        DepartureDate,
                        ArrivalDate,
                        GreographicalArea});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTravelQuoteAsync(System.DateTime DateOfBirth, System.DateTime DepartureDate, System.DateTime ArrivalDate, string GreographicalArea) {
            this.GetTravelQuoteAsync(DateOfBirth, DepartureDate, ArrivalDate, GreographicalArea, null);
        }
        
        /// <remarks/>
        public void GetTravelQuoteAsync(System.DateTime DateOfBirth, System.DateTime DepartureDate, System.DateTime ArrivalDate, string GreographicalArea, object userState) {
            if ((this.GetTravelQuoteOperationCompleted == null)) {
                this.GetTravelQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTravelQuoteOperationCompleted);
            }
            this.InvokeAsync("GetTravelQuote", new object[] {
                        DateOfBirth,
                        DepartureDate,
                        ArrivalDate,
                        GreographicalArea}, this.GetTravelQuoteOperationCompleted, userState);
        }
        
        private void OnGetTravelQuoteOperationCompleted(object arg) {
            if ((this.GetTravelQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTravelQuoteCompleted(this, new GetTravelQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetMotorQuote", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMotorQuote(string TypeOfCover, string VehicleCategory, string VehicleValue, string PaymentOpt, string Excess, string Tracking, string Flood, string SRCC) {
            object[] results = this.Invoke("GetMotorQuote", new object[] {
                        TypeOfCover,
                        VehicleCategory,
                        VehicleValue,
                        PaymentOpt,
                        Excess,
                        Tracking,
                        Flood,
                        SRCC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMotorQuoteAsync(string TypeOfCover, string VehicleCategory, string VehicleValue, string PaymentOpt, string Excess, string Tracking, string Flood, string SRCC) {
            this.GetMotorQuoteAsync(TypeOfCover, VehicleCategory, VehicleValue, PaymentOpt, Excess, Tracking, Flood, SRCC, null);
        }
        
        /// <remarks/>
        public void GetMotorQuoteAsync(string TypeOfCover, string VehicleCategory, string VehicleValue, string PaymentOpt, string Excess, string Tracking, string Flood, string SRCC, object userState) {
            if ((this.GetMotorQuoteOperationCompleted == null)) {
                this.GetMotorQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMotorQuoteOperationCompleted);
            }
            this.InvokeAsync("GetMotorQuote", new object[] {
                        TypeOfCover,
                        VehicleCategory,
                        VehicleValue,
                        PaymentOpt,
                        Excess,
                        Tracking,
                        Flood,
                        SRCC}, this.GetMotorQuoteOperationCompleted, userState);
        }
        
        private void OnGetMotorQuoteOperationCompleted(object arg) {
            if ((this.GetMotorQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMotorQuoteCompleted(this, new GetMotorQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetHomeShieldQuote", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHomeShieldQuote(long mUnit) {
            object[] results = this.Invoke("GetHomeShieldQuote", new object[] {
                        mUnit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHomeShieldQuoteAsync(long mUnit) {
            this.GetHomeShieldQuoteAsync(mUnit, null);
        }
        
        /// <remarks/>
        public void GetHomeShieldQuoteAsync(long mUnit, object userState) {
            if ((this.GetHomeShieldQuoteOperationCompleted == null)) {
                this.GetHomeShieldQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHomeShieldQuoteOperationCompleted);
            }
            this.InvokeAsync("GetHomeShieldQuote", new object[] {
                        mUnit}, this.GetHomeShieldQuoteOperationCompleted, userState);
        }
        
        private void OnGetHomeShieldQuoteOperationCompleted(object arg) {
            if ((this.GetHomeShieldQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHomeShieldQuoteCompleted(this, new GetHomeShieldQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetSafetyplusQuote", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSafetyplusQuote(long mUnit) {
            object[] results = this.Invoke("GetSafetyplusQuote", new object[] {
                        mUnit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSafetyplusQuoteAsync(long mUnit) {
            this.GetSafetyplusQuoteAsync(mUnit, null);
        }
        
        /// <remarks/>
        public void GetSafetyplusQuoteAsync(long mUnit, object userState) {
            if ((this.GetSafetyplusQuoteOperationCompleted == null)) {
                this.GetSafetyplusQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSafetyplusQuoteOperationCompleted);
            }
            this.InvokeAsync("GetSafetyplusQuote", new object[] {
                        mUnit}, this.GetSafetyplusQuoteOperationCompleted, userState);
        }
        
        private void OnGetSafetyplusQuoteOperationCompleted(object arg) {
            if ((this.GetSafetyplusQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSafetyplusQuoteCompleted(this, new GetSafetyplusQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/POSTNotificationDet", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NotificationsDetails POSTNotificationDet(
                    string MerchantID, 
                    string Mpassword, 
                    string Product, 
                    string NotifyID, 
                    string PolicyNo, 
                    string FirstName, 
                    string LastName, 
                    System.DateTime DOB, 
                    string PhoneNumber, 
                    string Email, 
                    System.DateTime RenewalDate, 
                    string OutstandPrem, 
                    System.DateTime PaymentDate, 
                    string ReceiptNo, 
                    decimal ReceiptAmt, 
                    string RenUrl, 
                    string Narration, 
                    string EmailResponse, 
                    string smsResponse, 
                    string PremiumBalance) {
            object[] results = this.Invoke("POSTNotificationDet", new object[] {
                        MerchantID,
                        Mpassword,
                        Product,
                        NotifyID,
                        PolicyNo,
                        FirstName,
                        LastName,
                        DOB,
                        PhoneNumber,
                        Email,
                        RenewalDate,
                        OutstandPrem,
                        PaymentDate,
                        ReceiptNo,
                        ReceiptAmt,
                        RenUrl,
                        Narration,
                        EmailResponse,
                        smsResponse,
                        PremiumBalance});
            return ((NotificationsDetails)(results[0]));
        }
        
        /// <remarks/>
        public void POSTNotificationDetAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Product, 
                    string NotifyID, 
                    string PolicyNo, 
                    string FirstName, 
                    string LastName, 
                    System.DateTime DOB, 
                    string PhoneNumber, 
                    string Email, 
                    System.DateTime RenewalDate, 
                    string OutstandPrem, 
                    System.DateTime PaymentDate, 
                    string ReceiptNo, 
                    decimal ReceiptAmt, 
                    string RenUrl, 
                    string Narration, 
                    string EmailResponse, 
                    string smsResponse, 
                    string PremiumBalance) {
            this.POSTNotificationDetAsync(MerchantID, Mpassword, Product, NotifyID, PolicyNo, FirstName, LastName, DOB, PhoneNumber, Email, RenewalDate, OutstandPrem, PaymentDate, ReceiptNo, ReceiptAmt, RenUrl, Narration, EmailResponse, smsResponse, PremiumBalance, null);
        }
        
        /// <remarks/>
        public void POSTNotificationDetAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Product, 
                    string NotifyID, 
                    string PolicyNo, 
                    string FirstName, 
                    string LastName, 
                    System.DateTime DOB, 
                    string PhoneNumber, 
                    string Email, 
                    System.DateTime RenewalDate, 
                    string OutstandPrem, 
                    System.DateTime PaymentDate, 
                    string ReceiptNo, 
                    decimal ReceiptAmt, 
                    string RenUrl, 
                    string Narration, 
                    string EmailResponse, 
                    string smsResponse, 
                    string PremiumBalance, 
                    object userState) {
            if ((this.POSTNotificationDetOperationCompleted == null)) {
                this.POSTNotificationDetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTNotificationDetOperationCompleted);
            }
            this.InvokeAsync("POSTNotificationDet", new object[] {
                        MerchantID,
                        Mpassword,
                        Product,
                        NotifyID,
                        PolicyNo,
                        FirstName,
                        LastName,
                        DOB,
                        PhoneNumber,
                        Email,
                        RenewalDate,
                        OutstandPrem,
                        PaymentDate,
                        ReceiptNo,
                        ReceiptAmt,
                        RenUrl,
                        Narration,
                        EmailResponse,
                        smsResponse,
                        PremiumBalance}, this.POSTNotificationDetOperationCompleted, userState);
        }
        
        private void OnPOSTNotificationDetOperationCompleted(object arg) {
            if ((this.POSTNotificationDetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTNotificationDetCompleted(this, new POSTNotificationDetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/NotEMAIL", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NotEMAIL(string FirstName, string LastName, string ToAddress, string PolicyNo, string NotifyID, decimal Amount, string Oustdprem, System.DateTime PaymentDate, System.DateTime RenewalDate, string Product, string Narration, string Receipt, string RenUrl, string PremiumBal) {
            object[] results = this.Invoke("NotEMAIL", new object[] {
                        FirstName,
                        LastName,
                        ToAddress,
                        PolicyNo,
                        NotifyID,
                        Amount,
                        Oustdprem,
                        PaymentDate,
                        RenewalDate,
                        Product,
                        Narration,
                        Receipt,
                        RenUrl,
                        PremiumBal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NotEMAILAsync(string FirstName, string LastName, string ToAddress, string PolicyNo, string NotifyID, decimal Amount, string Oustdprem, System.DateTime PaymentDate, System.DateTime RenewalDate, string Product, string Narration, string Receipt, string RenUrl, string PremiumBal) {
            this.NotEMAILAsync(FirstName, LastName, ToAddress, PolicyNo, NotifyID, Amount, Oustdprem, PaymentDate, RenewalDate, Product, Narration, Receipt, RenUrl, PremiumBal, null);
        }
        
        /// <remarks/>
        public void NotEMAILAsync(string FirstName, string LastName, string ToAddress, string PolicyNo, string NotifyID, decimal Amount, string Oustdprem, System.DateTime PaymentDate, System.DateTime RenewalDate, string Product, string Narration, string Receipt, string RenUrl, string PremiumBal, object userState) {
            if ((this.NotEMAILOperationCompleted == null)) {
                this.NotEMAILOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotEMAILOperationCompleted);
            }
            this.InvokeAsync("NotEMAIL", new object[] {
                        FirstName,
                        LastName,
                        ToAddress,
                        PolicyNo,
                        NotifyID,
                        Amount,
                        Oustdprem,
                        PaymentDate,
                        RenewalDate,
                        Product,
                        Narration,
                        Receipt,
                        RenUrl,
                        PremiumBal}, this.NotEMAILOperationCompleted, userState);
        }
        
        private void OnNotEMAILOperationCompleted(object arg) {
            if ((this.NotEMAILCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotEMAILCompleted(this, new NotEMAILCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetConfirmTel", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetConfirmTel(string MerchantID, string MerchantPWD, string Telephone) {
            object[] results = this.Invoke("GetConfirmTel", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Telephone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfirmTelAsync(string MerchantID, string MerchantPWD, string Telephone) {
            this.GetConfirmTelAsync(MerchantID, MerchantPWD, Telephone, null);
        }
        
        /// <remarks/>
        public void GetConfirmTelAsync(string MerchantID, string MerchantPWD, string Telephone, object userState) {
            if ((this.GetConfirmTelOperationCompleted == null)) {
                this.GetConfirmTelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfirmTelOperationCompleted);
            }
            this.InvokeAsync("GetConfirmTel", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Telephone}, this.GetConfirmTelOperationCompleted, userState);
        }
        
        private void OnGetConfirmTelOperationCompleted(object arg) {
            if ((this.GetConfirmTelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfirmTelCompleted(this, new GetConfirmTelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_RenewalPayment_PostSource", RequestElementName="Passing_RenewalPayment_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_RenewalPayment_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_RenewalPayment_PostSourceResult")]
        public string SubmitRenewBusinessPayRec(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string Company, 
                    string PaymentNarrtn, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string PostSource, 
                    string PostType) {
            object[] results = this.Invoke("SubmitRenewBusinessPayRec", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        Company,
                        PaymentNarrtn,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        Premium,
                        SumInsured,
                        PostSource,
                        PostType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitRenewBusinessPayRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string Company, 
                    string PaymentNarrtn, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string PostSource, 
                    string PostType) {
            this.SubmitRenewBusinessPayRecAsync(MerchantID, Mpassword, PolicyNo, Company, PaymentNarrtn, DateOfBirth, startdate, ReferenceNo, FirstName, LastName, Title, Address, PhoneNumber, Email, PolicyTerm, PaymentFreq, PaymentPayOutFreq, ProductType, Premium, SumInsured, PostSource, PostType, null);
        }
        
        /// <remarks/>
        public void SubmitRenewBusinessPayRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string Company, 
                    string PaymentNarrtn, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string PostSource, 
                    string PostType, 
                    object userState) {
            if ((this.SubmitRenewBusinessPayRecOperationCompleted == null)) {
                this.SubmitRenewBusinessPayRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitRenewBusinessPayRecOperationCompleted);
            }
            this.InvokeAsync("SubmitRenewBusinessPayRec", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        Company,
                        PaymentNarrtn,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        Premium,
                        SumInsured,
                        PostSource,
                        PostType}, this.SubmitRenewBusinessPayRecOperationCompleted, userState);
        }
        
        private void OnSubmitRenewBusinessPayRecOperationCompleted(object arg) {
            if ((this.SubmitRenewBusinessPayRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitRenewBusinessPayRecCompleted(this, new SubmitRenewBusinessPayRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/PostTQSync", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostTQSync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string PostType, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string Gender, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    string PaySource, 
                    decimal Premium, 
                    decimal SumAssured) {
            object[] results = this.Invoke("PostTQSync", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        PostType,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        Gender,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        PaySource,
                        Premium,
                        SumAssured});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostTQSyncAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string PostType, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string Gender, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    string PaySource, 
                    decimal Premium, 
                    decimal SumAssured) {
            this.PostTQSyncAsync(MerchantID, Mpassword, PolicyNo, PostType, DateOfBirth, startdate, ReferenceNo, Gender, FirstName, LastName, Title, Address, PhoneNumber, Email, PolicyTerm, PaymentFreq, PaymentPayOutFreq, ProductType, PaySource, Premium, SumAssured, null);
        }
        
        /// <remarks/>
        public void PostTQSyncAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string PostType, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string Gender, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    string PaySource, 
                    decimal Premium, 
                    decimal SumAssured, 
                    object userState) {
            if ((this.PostTQSyncOperationCompleted == null)) {
                this.PostTQSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostTQSyncOperationCompleted);
            }
            this.InvokeAsync("PostTQSync", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        PostType,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        Gender,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        PaySource,
                        Premium,
                        SumAssured}, this.PostTQSyncOperationCompleted, userState);
        }
        
        private void OnPostTQSyncOperationCompleted(object arg) {
            if ((this.PostTQSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostTQSyncCompleted(this, new PostTQSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/PostABSSync", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostABSSync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string PostType, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    System.DateTime enddate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string CoverType, 
                    string ProductType, 
                    string PaySource, 
                    string Occupation, 
                    string ChassisNumber, 
                    string VehicleMake, 
                    string VehicleNumber, 
                    string VehicleType, 
                    string EngineNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    decimal Premium, 
                    decimal SumAssured, 
                    string BrokerID, 
                    decimal CommRate, 
                    decimal PremRate, 
                    string Gender) {
            object[] results = this.Invoke("PostABSSync", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        PostType,
                        DateOfBirth,
                        startdate,
                        enddate,
                        ReferenceNo,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        CoverType,
                        ProductType,
                        PaySource,
                        Occupation,
                        ChassisNumber,
                        VehicleMake,
                        VehicleNumber,
                        VehicleType,
                        EngineNumber,
                        RegistrationNumber,
                        VehicleModel,
                        Premium,
                        SumAssured,
                        BrokerID,
                        CommRate,
                        PremRate,
                        Gender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostABSSyncAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string PostType, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    System.DateTime enddate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string CoverType, 
                    string ProductType, 
                    string PaySource, 
                    string Occupation, 
                    string ChassisNumber, 
                    string VehicleMake, 
                    string VehicleNumber, 
                    string VehicleType, 
                    string EngineNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    decimal Premium, 
                    decimal SumAssured, 
                    string BrokerID, 
                    decimal CommRate, 
                    decimal PremRate, 
                    string Gender) {
            this.PostABSSyncAsync(MerchantID, Mpassword, PolicyNo, PostType, DateOfBirth, startdate, enddate, ReferenceNo, FirstName, LastName, Title, Address, PhoneNumber, Email, CoverType, ProductType, PaySource, Occupation, ChassisNumber, VehicleMake, VehicleNumber, VehicleType, EngineNumber, RegistrationNumber, VehicleModel, Premium, SumAssured, BrokerID, CommRate, PremRate, Gender, null);
        }
        
        /// <remarks/>
        public void PostABSSyncAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string PolicyNo, 
                    string PostType, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    System.DateTime enddate, 
                    string ReferenceNo, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string CoverType, 
                    string ProductType, 
                    string PaySource, 
                    string Occupation, 
                    string ChassisNumber, 
                    string VehicleMake, 
                    string VehicleNumber, 
                    string VehicleType, 
                    string EngineNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    decimal Premium, 
                    decimal SumAssured, 
                    string BrokerID, 
                    decimal CommRate, 
                    decimal PremRate, 
                    string Gender, 
                    object userState) {
            if ((this.PostABSSyncOperationCompleted == null)) {
                this.PostABSSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostABSSyncOperationCompleted);
            }
            this.InvokeAsync("PostABSSync", new object[] {
                        MerchantID,
                        Mpassword,
                        PolicyNo,
                        PostType,
                        DateOfBirth,
                        startdate,
                        enddate,
                        ReferenceNo,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        CoverType,
                        ProductType,
                        PaySource,
                        Occupation,
                        ChassisNumber,
                        VehicleMake,
                        VehicleNumber,
                        VehicleType,
                        EngineNumber,
                        RegistrationNumber,
                        VehicleModel,
                        Premium,
                        SumAssured,
                        BrokerID,
                        CommRate,
                        PremRate,
                        Gender}, this.PostABSSyncOperationCompleted, userState);
        }
        
        private void OnPostABSSyncOperationCompleted(object arg) {
            if ((this.PostABSSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostABSSyncCompleted(this, new PostABSSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetTQproposalNum", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTQproposalNum(
                    string MerchantID, 
                    string Mpassword, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string Gender, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    string PaySource, 
                    decimal Premium, 
                    decimal SumAssured) {
            object[] results = this.Invoke("GetTQproposalNum", new object[] {
                        MerchantID,
                        Mpassword,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        Gender,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        PaySource,
                        Premium,
                        SumAssured});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTQproposalNumAsync(
                    string MerchantID, 
                    string Mpassword, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string Gender, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    string PaySource, 
                    decimal Premium, 
                    decimal SumAssured) {
            this.GetTQproposalNumAsync(MerchantID, Mpassword, DateOfBirth, startdate, ReferenceNo, Gender, FirstName, LastName, Title, Address, PhoneNumber, Email, PolicyTerm, PaymentFreq, PaymentPayOutFreq, ProductType, PaySource, Premium, SumAssured, null);
        }
        
        /// <remarks/>
        public void GetTQproposalNumAsync(
                    string MerchantID, 
                    string Mpassword, 
                    System.DateTime DateOfBirth, 
                    System.DateTime startdate, 
                    string ReferenceNo, 
                    string Gender, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Address, 
                    string PhoneNumber, 
                    string Email, 
                    string PolicyTerm, 
                    string PaymentFreq, 
                    string PaymentPayOutFreq, 
                    string ProductType, 
                    string PaySource, 
                    decimal Premium, 
                    decimal SumAssured, 
                    object userState) {
            if ((this.GetTQproposalNumOperationCompleted == null)) {
                this.GetTQproposalNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTQproposalNumOperationCompleted);
            }
            this.InvokeAsync("GetTQproposalNum", new object[] {
                        MerchantID,
                        Mpassword,
                        DateOfBirth,
                        startdate,
                        ReferenceNo,
                        Gender,
                        FirstName,
                        LastName,
                        Title,
                        Address,
                        PhoneNumber,
                        Email,
                        PolicyTerm,
                        PaymentFreq,
                        PaymentPayOutFreq,
                        ProductType,
                        PaySource,
                        Premium,
                        SumAssured}, this.GetTQproposalNumOperationCompleted, userState);
        }
        
        private void OnGetTQproposalNumOperationCompleted(object arg) {
            if ((this.GetTQproposalNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTQproposalNumCompleted(this, new GetTQproposalNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Marine_PostSource", RequestElementName="Passing_Marine_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Marine_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_Marine_PostSourceResult")]
        public string PostMarineRec(
                    string MerchantID, 
                    string Mpassword, 
                    string Occupation, 
                    string CustomerNAme, 
                    string Telephone, 
                    string Email, 
                    string BizAddress, 
                    string PolicyNo, 
                    decimal Premium, 
                    decimal SumInsured, 
                    System.DateTime dateCreated, 
                    string Convey, 
                    decimal ExchangeRt, 
                    decimal ForexCurr, 
                    decimal InvoiceVal, 
                    decimal PremRt, 
                    string TIN, 
                    string FrmLocatn, 
                    string ToLocatn, 
                    string Descriptn, 
                    string ProformaInvoice, 
                    System.DateTime ActiveDate, 
                    System.DateTime expiryDate, 
                    string ClauseType, 
                    string PostSource, 
                    string ReferenceNo, 
                    string PostType) {
            object[] results = this.Invoke("PostMarineRec", new object[] {
                        MerchantID,
                        Mpassword,
                        Occupation,
                        CustomerNAme,
                        Telephone,
                        Email,
                        BizAddress,
                        PolicyNo,
                        Premium,
                        SumInsured,
                        dateCreated,
                        Convey,
                        ExchangeRt,
                        ForexCurr,
                        InvoiceVal,
                        PremRt,
                        TIN,
                        FrmLocatn,
                        ToLocatn,
                        Descriptn,
                        ProformaInvoice,
                        ActiveDate,
                        expiryDate,
                        ClauseType,
                        PostSource,
                        ReferenceNo,
                        PostType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostMarineRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Occupation, 
                    string CustomerNAme, 
                    string Telephone, 
                    string Email, 
                    string BizAddress, 
                    string PolicyNo, 
                    decimal Premium, 
                    decimal SumInsured, 
                    System.DateTime dateCreated, 
                    string Convey, 
                    decimal ExchangeRt, 
                    decimal ForexCurr, 
                    decimal InvoiceVal, 
                    decimal PremRt, 
                    string TIN, 
                    string FrmLocatn, 
                    string ToLocatn, 
                    string Descriptn, 
                    string ProformaInvoice, 
                    System.DateTime ActiveDate, 
                    System.DateTime expiryDate, 
                    string ClauseType, 
                    string PostSource, 
                    string ReferenceNo, 
                    string PostType) {
            this.PostMarineRecAsync(MerchantID, Mpassword, Occupation, CustomerNAme, Telephone, Email, BizAddress, PolicyNo, Premium, SumInsured, dateCreated, Convey, ExchangeRt, ForexCurr, InvoiceVal, PremRt, TIN, FrmLocatn, ToLocatn, Descriptn, ProformaInvoice, ActiveDate, expiryDate, ClauseType, PostSource, ReferenceNo, PostType, null);
        }
        
        /// <remarks/>
        public void PostMarineRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Occupation, 
                    string CustomerNAme, 
                    string Telephone, 
                    string Email, 
                    string BizAddress, 
                    string PolicyNo, 
                    decimal Premium, 
                    decimal SumInsured, 
                    System.DateTime dateCreated, 
                    string Convey, 
                    decimal ExchangeRt, 
                    decimal ForexCurr, 
                    decimal InvoiceVal, 
                    decimal PremRt, 
                    string TIN, 
                    string FrmLocatn, 
                    string ToLocatn, 
                    string Descriptn, 
                    string ProformaInvoice, 
                    System.DateTime ActiveDate, 
                    System.DateTime expiryDate, 
                    string ClauseType, 
                    string PostSource, 
                    string ReferenceNo, 
                    string PostType, 
                    object userState) {
            if ((this.PostMarineRecOperationCompleted == null)) {
                this.PostMarineRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostMarineRecOperationCompleted);
            }
            this.InvokeAsync("PostMarineRec", new object[] {
                        MerchantID,
                        Mpassword,
                        Occupation,
                        CustomerNAme,
                        Telephone,
                        Email,
                        BizAddress,
                        PolicyNo,
                        Premium,
                        SumInsured,
                        dateCreated,
                        Convey,
                        ExchangeRt,
                        ForexCurr,
                        InvoiceVal,
                        PremRt,
                        TIN,
                        FrmLocatn,
                        ToLocatn,
                        Descriptn,
                        ProformaInvoice,
                        ActiveDate,
                        expiryDate,
                        ClauseType,
                        PostSource,
                        ReferenceNo,
                        PostType}, this.PostMarineRecOperationCompleted, userState);
        }
        
        private void OnPostMarineRecOperationCompleted(object arg) {
            if ((this.PostMarineRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostMarineRecCompleted(this, new PostMarineRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/PostTravel2Raga", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public certificate_out PostTravel2Raga(System.DateTime start_date, System.DateTime end_date, string first_name, string last_name, string Area_Type, string num_passport, System.DateTime date_birth, string nationality, string country_residence, string email, string country_destination) {
            object[] results = this.Invoke("PostTravel2Raga", new object[] {
                        start_date,
                        end_date,
                        first_name,
                        last_name,
                        Area_Type,
                        num_passport,
                        date_birth,
                        nationality,
                        country_residence,
                        email,
                        country_destination});
            return ((certificate_out)(results[0]));
        }
        
        /// <remarks/>
        public void PostTravel2RagaAsync(System.DateTime start_date, System.DateTime end_date, string first_name, string last_name, string Area_Type, string num_passport, System.DateTime date_birth, string nationality, string country_residence, string email, string country_destination) {
            this.PostTravel2RagaAsync(start_date, end_date, first_name, last_name, Area_Type, num_passport, date_birth, nationality, country_residence, email, country_destination, null);
        }
        
        /// <remarks/>
        public void PostTravel2RagaAsync(System.DateTime start_date, System.DateTime end_date, string first_name, string last_name, string Area_Type, string num_passport, System.DateTime date_birth, string nationality, string country_residence, string email, string country_destination, object userState) {
            if ((this.PostTravel2RagaOperationCompleted == null)) {
                this.PostTravel2RagaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostTravel2RagaOperationCompleted);
            }
            this.InvokeAsync("PostTravel2Raga", new object[] {
                        start_date,
                        end_date,
                        first_name,
                        last_name,
                        Area_Type,
                        num_passport,
                        date_birth,
                        nationality,
                        country_residence,
                        email,
                        country_destination}, this.PostTravel2RagaOperationCompleted, userState);
        }
        
        private void OnPostTravel2RagaOperationCompleted(object arg) {
            if ((this.PostTravel2RagaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostTravel2RagaCompleted(this, new PostTravel2RagaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/PostTravelRagaOld", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public certificate_out PostTravelRagaOld(System.DateTime start_date, System.DateTime end_date, string first_name, string last_name, string Area_Type, string num_passport, System.DateTime date_birth, string nationality, string country_residence, string email, string country_destination) {
            object[] results = this.Invoke("PostTravelRagaOld", new object[] {
                        start_date,
                        end_date,
                        first_name,
                        last_name,
                        Area_Type,
                        num_passport,
                        date_birth,
                        nationality,
                        country_residence,
                        email,
                        country_destination});
            return ((certificate_out)(results[0]));
        }
        
        /// <remarks/>
        public void PostTravelRagaOldAsync(System.DateTime start_date, System.DateTime end_date, string first_name, string last_name, string Area_Type, string num_passport, System.DateTime date_birth, string nationality, string country_residence, string email, string country_destination) {
            this.PostTravelRagaOldAsync(start_date, end_date, first_name, last_name, Area_Type, num_passport, date_birth, nationality, country_residence, email, country_destination, null);
        }
        
        /// <remarks/>
        public void PostTravelRagaOldAsync(System.DateTime start_date, System.DateTime end_date, string first_name, string last_name, string Area_Type, string num_passport, System.DateTime date_birth, string nationality, string country_residence, string email, string country_destination, object userState) {
            if ((this.PostTravelRagaOldOperationCompleted == null)) {
                this.PostTravelRagaOldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostTravelRagaOldOperationCompleted);
            }
            this.InvokeAsync("PostTravelRagaOld", new object[] {
                        start_date,
                        end_date,
                        first_name,
                        last_name,
                        Area_Type,
                        num_passport,
                        date_birth,
                        nationality,
                        country_residence,
                        email,
                        country_destination}, this.PostTravelRagaOldOperationCompleted, userState);
        }
        
        private void OnPostTravelRagaOldOperationCompleted(object arg) {
            if ((this.PostTravelRagaOldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostTravelRagaOldCompleted(this, new PostTravelRagaOldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/PostTravel2RagaArray", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public certificate_out PostTravel2RagaArray(System.DateTime start_date, System.DateTime end_date, string first_name, string last_name, string Area_Type, string num_passport, System.DateTime date_birth, string nationality, string country_residence, string email, string country_destination) {
            object[] results = this.Invoke("PostTravel2RagaArray", new object[] {
                        start_date,
                        end_date,
                        first_name,
                        last_name,
                        Area_Type,
                        num_passport,
                        date_birth,
                        nationality,
                        country_residence,
                        email,
                        country_destination});
            return ((certificate_out)(results[0]));
        }
        
        /// <remarks/>
        public void PostTravel2RagaArrayAsync(System.DateTime start_date, System.DateTime end_date, string first_name, string last_name, string Area_Type, string num_passport, System.DateTime date_birth, string nationality, string country_residence, string email, string country_destination) {
            this.PostTravel2RagaArrayAsync(start_date, end_date, first_name, last_name, Area_Type, num_passport, date_birth, nationality, country_residence, email, country_destination, null);
        }
        
        /// <remarks/>
        public void PostTravel2RagaArrayAsync(System.DateTime start_date, System.DateTime end_date, string first_name, string last_name, string Area_Type, string num_passport, System.DateTime date_birth, string nationality, string country_residence, string email, string country_destination, object userState) {
            if ((this.PostTravel2RagaArrayOperationCompleted == null)) {
                this.PostTravel2RagaArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostTravel2RagaArrayOperationCompleted);
            }
            this.InvokeAsync("PostTravel2RagaArray", new object[] {
                        start_date,
                        end_date,
                        first_name,
                        last_name,
                        Area_Type,
                        num_passport,
                        date_birth,
                        nationality,
                        country_residence,
                        email,
                        country_destination}, this.PostTravel2RagaArrayOperationCompleted, userState);
        }
        
        private void OnPostTravel2RagaArrayOperationCompleted(object arg) {
            if ((this.PostTravel2RagaArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostTravel2RagaArrayCompleted(this, new PostTravel2RagaArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Broker_Motor_PostSource", RequestElementName="Passing_Broker_Motor_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Broker_Motor_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_Broker_Motor_PostSourceResult")]
        public string POSTBrokerMotorRec(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string mAddress, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string RenewPolNo) {
            object[] results = this.Invoke("POSTBrokerMotorRec", new object[] {
                        MerchantID,
                        Mpassword,
                        CustomerName,
                        mAddress,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo,
                        PostSource,
                        PostType,
                        BrokerID,
                        CommRate,
                        PremRate,
                        RenewPolNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void POSTBrokerMotorRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string mAddress, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string RenewPolNo) {
            this.POSTBrokerMotorRecAsync(MerchantID, Mpassword, CustomerName, mAddress, PhoneNumber, Email, EngineNumber, InsuranceType, Premium, SumInsured, ChassisNumber, RegistrationNumber, VehicleModel, VehicleCategory, VehicleColor, VehicleMake, VehicleType, YearOfMake, dateCreated, Activedate, expiryDate, CreditNote, PrnNo, PostSource, PostType, BrokerID, CommRate, PremRate, RenewPolNo, null);
        }
        
        /// <remarks/>
        public void POSTBrokerMotorRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string CustomerName, 
                    string mAddress, 
                    string PhoneNumber, 
                    string Email, 
                    string EngineNumber, 
                    string InsuranceType, 
                    decimal Premium, 
                    decimal SumInsured, 
                    string ChassisNumber, 
                    string RegistrationNumber, 
                    string VehicleModel, 
                    string VehicleCategory, 
                    string VehicleColor, 
                    string VehicleMake, 
                    string VehicleType, 
                    string YearOfMake, 
                    System.DateTime dateCreated, 
                    System.DateTime Activedate, 
                    System.DateTime expiryDate, 
                    string CreditNote, 
                    string PrnNo, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string RenewPolNo, 
                    object userState) {
            if ((this.POSTBrokerMotorRecOperationCompleted == null)) {
                this.POSTBrokerMotorRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTBrokerMotorRecOperationCompleted);
            }
            this.InvokeAsync("POSTBrokerMotorRec", new object[] {
                        MerchantID,
                        Mpassword,
                        CustomerName,
                        mAddress,
                        PhoneNumber,
                        Email,
                        EngineNumber,
                        InsuranceType,
                        Premium,
                        SumInsured,
                        ChassisNumber,
                        RegistrationNumber,
                        VehicleModel,
                        VehicleCategory,
                        VehicleColor,
                        VehicleMake,
                        VehicleType,
                        YearOfMake,
                        dateCreated,
                        Activedate,
                        expiryDate,
                        CreditNote,
                        PrnNo,
                        PostSource,
                        PostType,
                        BrokerID,
                        CommRate,
                        PremRate,
                        RenewPolNo}, this.POSTBrokerMotorRecOperationCompleted, userState);
        }
        
        private void OnPOSTBrokerMotorRecOperationCompleted(object arg) {
            if ((this.POSTBrokerMotorRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTBrokerMotorRecCompleted(this, new POSTBrokerMotorRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Broker_Travel_PostSource", RequestElementName="Passing_Broker_Travel_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Broker_Travel_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_Broker_Travel_PostSourceResult")]
        public string POSTBrokerTravelRec(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string mAddress, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string RenewPolNo, 
                    string OtherCountry) {
            object[] results = this.Invoke("POSTBrokerTravelRec", new object[] {
                        MerchantID,
                        Mpassword,
                        Title,
                        Surname,
                        FirstName,
                        Dateofbirth,
                        Gender,
                        Nationality,
                        IdentificationType,
                        IdentificationNo,
                        Occupation,
                        PhoneNo,
                        Email,
                        mAddress,
                        TravelType,
                        TravelDestination,
                        TravelerDOB,
                        PeriodofInsurance,
                        Purposeoftrip,
                        DepartureDate,
                        ReturnDate,
                        totalCost,
                        ChildU18,
                        GroupCount,
                        ReferenceNo,
                        PostSource,
                        PostType,
                        BrokerID,
                        CommRate,
                        PremRate,
                        RenewPolNo,
                        OtherCountry});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void POSTBrokerTravelRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string mAddress, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string RenewPolNo, 
                    string OtherCountry) {
            this.POSTBrokerTravelRecAsync(MerchantID, Mpassword, Title, Surname, FirstName, Dateofbirth, Gender, Nationality, IdentificationType, IdentificationNo, Occupation, PhoneNo, Email, mAddress, TravelType, TravelDestination, TravelerDOB, PeriodofInsurance, Purposeoftrip, DepartureDate, ReturnDate, totalCost, ChildU18, GroupCount, ReferenceNo, PostSource, PostType, BrokerID, CommRate, PremRate, RenewPolNo, OtherCountry, null);
        }
        
        /// <remarks/>
        public void POSTBrokerTravelRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string mAddress, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string RenewPolNo, 
                    string OtherCountry, 
                    object userState) {
            if ((this.POSTBrokerTravelRecOperationCompleted == null)) {
                this.POSTBrokerTravelRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTBrokerTravelRecOperationCompleted);
            }
            this.InvokeAsync("POSTBrokerTravelRec", new object[] {
                        MerchantID,
                        Mpassword,
                        Title,
                        Surname,
                        FirstName,
                        Dateofbirth,
                        Gender,
                        Nationality,
                        IdentificationType,
                        IdentificationNo,
                        Occupation,
                        PhoneNo,
                        Email,
                        mAddress,
                        TravelType,
                        TravelDestination,
                        TravelerDOB,
                        PeriodofInsurance,
                        Purposeoftrip,
                        DepartureDate,
                        ReturnDate,
                        totalCost,
                        ChildU18,
                        GroupCount,
                        ReferenceNo,
                        PostSource,
                        PostType,
                        BrokerID,
                        CommRate,
                        PremRate,
                        RenewPolNo,
                        OtherCountry}, this.POSTBrokerTravelRecOperationCompleted, userState);
        }
        
        private void OnPOSTBrokerTravelRecOperationCompleted(object arg) {
            if ((this.POSTBrokerTravelRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTBrokerTravelRecCompleted(this, new POSTBrokerTravelRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetBrokerMotorQuote", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBrokerMotorQuote(string TypeOfCover, string VehicleCategory, string VehicleValue, string PaymentOpt, string Excess, string Tracking, string Flood, string SRCC, string PremiumRate) {
            object[] results = this.Invoke("GetBrokerMotorQuote", new object[] {
                        TypeOfCover,
                        VehicleCategory,
                        VehicleValue,
                        PaymentOpt,
                        Excess,
                        Tracking,
                        Flood,
                        SRCC,
                        PremiumRate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBrokerMotorQuoteAsync(string TypeOfCover, string VehicleCategory, string VehicleValue, string PaymentOpt, string Excess, string Tracking, string Flood, string SRCC, string PremiumRate) {
            this.GetBrokerMotorQuoteAsync(TypeOfCover, VehicleCategory, VehicleValue, PaymentOpt, Excess, Tracking, Flood, SRCC, PremiumRate, null);
        }
        
        /// <remarks/>
        public void GetBrokerMotorQuoteAsync(string TypeOfCover, string VehicleCategory, string VehicleValue, string PaymentOpt, string Excess, string Tracking, string Flood, string SRCC, string PremiumRate, object userState) {
            if ((this.GetBrokerMotorQuoteOperationCompleted == null)) {
                this.GetBrokerMotorQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBrokerMotorQuoteOperationCompleted);
            }
            this.InvokeAsync("GetBrokerMotorQuote", new object[] {
                        TypeOfCover,
                        VehicleCategory,
                        VehicleValue,
                        PaymentOpt,
                        Excess,
                        Tracking,
                        Flood,
                        SRCC,
                        PremiumRate}, this.GetBrokerMotorQuoteOperationCompleted, userState);
        }
        
        private void OnGetBrokerMotorQuoteOperationCompleted(object arg) {
            if ((this.GetBrokerMotorQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBrokerMotorQuoteCompleted(this, new GetBrokerMotorQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_Broker_HouseHolder_PostSource", RequestElementName="Passing_Broker_HouseHolder_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_Broker_HouseHolder_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_Broker_HouseHolder_PostSourceResult")]
        public string PostBrokerHouseHolder(
                    string MerchantID, 
                    string mPassword, 
                    string Firstname, 
                    string Lastname, 
                    string mAddress, 
                    string PhoneNo, 
                    string mEmail, 
                    string Occupation, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    decimal TotalSum, 
                    decimal TotalPremium, 
                    decimal GeneratorAmt, 
                    decimal AllriskAmt, 
                    decimal BuildingAmt, 
                    decimal ContentAmt, 
                    string CreditNote, 
                    string Description, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    decimal CommRate, 
                    decimal PremRate, 
                    string RenewPolNo) {
            object[] results = this.Invoke("PostBrokerHouseHolder", new object[] {
                        MerchantID,
                        mPassword,
                        Firstname,
                        Lastname,
                        mAddress,
                        PhoneNo,
                        mEmail,
                        Occupation,
                        StartDate,
                        EndDate,
                        TotalSum,
                        TotalPremium,
                        GeneratorAmt,
                        AllriskAmt,
                        BuildingAmt,
                        ContentAmt,
                        CreditNote,
                        Description,
                        PostSource,
                        PostType,
                        BrokerID,
                        CommRate,
                        PremRate,
                        RenewPolNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostBrokerHouseHolderAsync(
                    string MerchantID, 
                    string mPassword, 
                    string Firstname, 
                    string Lastname, 
                    string mAddress, 
                    string PhoneNo, 
                    string mEmail, 
                    string Occupation, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    decimal TotalSum, 
                    decimal TotalPremium, 
                    decimal GeneratorAmt, 
                    decimal AllriskAmt, 
                    decimal BuildingAmt, 
                    decimal ContentAmt, 
                    string CreditNote, 
                    string Description, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    decimal CommRate, 
                    decimal PremRate, 
                    string RenewPolNo) {
            this.PostBrokerHouseHolderAsync(MerchantID, mPassword, Firstname, Lastname, mAddress, PhoneNo, mEmail, Occupation, StartDate, EndDate, TotalSum, TotalPremium, GeneratorAmt, AllriskAmt, BuildingAmt, ContentAmt, CreditNote, Description, PostSource, PostType, BrokerID, CommRate, PremRate, RenewPolNo, null);
        }
        
        /// <remarks/>
        public void PostBrokerHouseHolderAsync(
                    string MerchantID, 
                    string mPassword, 
                    string Firstname, 
                    string Lastname, 
                    string mAddress, 
                    string PhoneNo, 
                    string mEmail, 
                    string Occupation, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    decimal TotalSum, 
                    decimal TotalPremium, 
                    decimal GeneratorAmt, 
                    decimal AllriskAmt, 
                    decimal BuildingAmt, 
                    decimal ContentAmt, 
                    string CreditNote, 
                    string Description, 
                    string PostSource, 
                    string PostType, 
                    string BrokerID, 
                    decimal CommRate, 
                    decimal PremRate, 
                    string RenewPolNo, 
                    object userState) {
            if ((this.PostBrokerHouseHolderOperationCompleted == null)) {
                this.PostBrokerHouseHolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostBrokerHouseHolderOperationCompleted);
            }
            this.InvokeAsync("PostBrokerHouseHolder", new object[] {
                        MerchantID,
                        mPassword,
                        Firstname,
                        Lastname,
                        mAddress,
                        PhoneNo,
                        mEmail,
                        Occupation,
                        StartDate,
                        EndDate,
                        TotalSum,
                        TotalPremium,
                        GeneratorAmt,
                        AllriskAmt,
                        BuildingAmt,
                        ContentAmt,
                        CreditNote,
                        Description,
                        PostSource,
                        PostType,
                        BrokerID,
                        CommRate,
                        PremRate,
                        RenewPolNo}, this.PostBrokerHouseHolderOperationCompleted, userState);
        }
        
        private void OnPostBrokerHouseHolderOperationCompleted(object arg) {
            if ((this.PostBrokerHouseHolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostBrokerHouseHolderCompleted(this, new PostBrokerHouseHolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetHouseHolderQuote", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHouseHolderQuote(string PaymentOption, decimal GenPremRt, decimal AllPremRt, decimal BuildPremRt, decimal ContentPremRt, decimal GeneratorAmt, decimal AllriskAmt, decimal BuildingAmt, decimal ContentAmt) {
            object[] results = this.Invoke("GetHouseHolderQuote", new object[] {
                        PaymentOption,
                        GenPremRt,
                        AllPremRt,
                        BuildPremRt,
                        ContentPremRt,
                        GeneratorAmt,
                        AllriskAmt,
                        BuildingAmt,
                        ContentAmt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHouseHolderQuoteAsync(string PaymentOption, decimal GenPremRt, decimal AllPremRt, decimal BuildPremRt, decimal ContentPremRt, decimal GeneratorAmt, decimal AllriskAmt, decimal BuildingAmt, decimal ContentAmt) {
            this.GetHouseHolderQuoteAsync(PaymentOption, GenPremRt, AllPremRt, BuildPremRt, ContentPremRt, GeneratorAmt, AllriskAmt, BuildingAmt, ContentAmt, null);
        }
        
        /// <remarks/>
        public void GetHouseHolderQuoteAsync(string PaymentOption, decimal GenPremRt, decimal AllPremRt, decimal BuildPremRt, decimal ContentPremRt, decimal GeneratorAmt, decimal AllriskAmt, decimal BuildingAmt, decimal ContentAmt, object userState) {
            if ((this.GetHouseHolderQuoteOperationCompleted == null)) {
                this.GetHouseHolderQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHouseHolderQuoteOperationCompleted);
            }
            this.InvokeAsync("GetHouseHolderQuote", new object[] {
                        PaymentOption,
                        GenPremRt,
                        AllPremRt,
                        BuildPremRt,
                        ContentPremRt,
                        GeneratorAmt,
                        AllriskAmt,
                        BuildingAmt,
                        ContentAmt}, this.GetHouseHolderQuoteOperationCompleted, userState);
        }
        
        private void OnGetHouseHolderQuoteOperationCompleted(object arg) {
            if ((this.GetHouseHolderQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHouseHolderQuoteCompleted(this, new GetHouseHolderQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="SubmitClaimRegister1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/SubmitClaimRegister", RequestElementName="SubmitClaimRegister", RequestNamespace="http://Custodianservices.com/", ResponseElementName="SubmitClaimRegisterResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SubmitClaimRegisterResult")]
        public ClaimRegStatus SubmitClaimRegister(string MerchantID, string MerchantPWD, string Fullname, string Address, string Email, string Telephone, string PolicyNo, string lossDescription, System.DateTime DateofLoss) {
            object[] results = this.Invoke("SubmitClaimRegister1", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Fullname,
                        Address,
                        Email,
                        Telephone,
                        PolicyNo,
                        lossDescription,
                        DateofLoss});
            return ((ClaimRegStatus)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitClaimRegister1Async(string MerchantID, string MerchantPWD, string Fullname, string Address, string Email, string Telephone, string PolicyNo, string lossDescription, System.DateTime DateofLoss) {
            this.SubmitClaimRegister1Async(MerchantID, MerchantPWD, Fullname, Address, Email, Telephone, PolicyNo, lossDescription, DateofLoss, null);
        }
        
        /// <remarks/>
        public void SubmitClaimRegister1Async(string MerchantID, string MerchantPWD, string Fullname, string Address, string Email, string Telephone, string PolicyNo, string lossDescription, System.DateTime DateofLoss, object userState) {
            if ((this.SubmitClaimRegister1OperationCompleted == null)) {
                this.SubmitClaimRegister1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitClaimRegister1OperationCompleted);
            }
            this.InvokeAsync("SubmitClaimRegister1", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Fullname,
                        Address,
                        Email,
                        Telephone,
                        PolicyNo,
                        lossDescription,
                        DateofLoss}, this.SubmitClaimRegister1OperationCompleted, userState);
        }
        
        private void OnSubmitClaimRegister1OperationCompleted(object arg) {
            if ((this.SubmitClaimRegister1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitClaimRegister1Completed(this, new SubmitClaimRegister1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/PostClaimsUpdate", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClaimRegStatus PostClaimsUpdate(string MerchantID, string MerchantPWD, string ClaimNo, string ClaimStatusCode) {
            object[] results = this.Invoke("PostClaimsUpdate", new object[] {
                        MerchantID,
                        MerchantPWD,
                        ClaimNo,
                        ClaimStatusCode});
            return ((ClaimRegStatus)(results[0]));
        }
        
        /// <remarks/>
        public void PostClaimsUpdateAsync(string MerchantID, string MerchantPWD, string ClaimNo, string ClaimStatusCode) {
            this.PostClaimsUpdateAsync(MerchantID, MerchantPWD, ClaimNo, ClaimStatusCode, null);
        }
        
        /// <remarks/>
        public void PostClaimsUpdateAsync(string MerchantID, string MerchantPWD, string ClaimNo, string ClaimStatusCode, object userState) {
            if ((this.PostClaimsUpdateOperationCompleted == null)) {
                this.PostClaimsUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostClaimsUpdateOperationCompleted);
            }
            this.InvokeAsync("PostClaimsUpdate", new object[] {
                        MerchantID,
                        MerchantPWD,
                        ClaimNo,
                        ClaimStatusCode}, this.PostClaimsUpdateOperationCompleted, userState);
        }
        
        private void OnPostClaimsUpdateOperationCompleted(object arg) {
            if ((this.PostClaimsUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostClaimsUpdateCompleted(this, new PostClaimsUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetMorePolicyDetails", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MorePolicyDetails GetMorePolicyDetails(string MerchantID, string MerchantPWD, string Subsidiary, string PolicyNumber) {
            object[] results = this.Invoke("GetMorePolicyDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Subsidiary,
                        PolicyNumber});
            return ((MorePolicyDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetMorePolicyDetailsAsync(string MerchantID, string MerchantPWD, string Subsidiary, string PolicyNumber) {
            this.GetMorePolicyDetailsAsync(MerchantID, MerchantPWD, Subsidiary, PolicyNumber, null);
        }
        
        /// <remarks/>
        public void GetMorePolicyDetailsAsync(string MerchantID, string MerchantPWD, string Subsidiary, string PolicyNumber, object userState) {
            if ((this.GetMorePolicyDetailsOperationCompleted == null)) {
                this.GetMorePolicyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMorePolicyDetailsOperationCompleted);
            }
            this.InvokeAsync("GetMorePolicyDetails", new object[] {
                        MerchantID,
                        MerchantPWD,
                        Subsidiary,
                        PolicyNumber}, this.GetMorePolicyDetailsOperationCompleted, userState);
        }
        
        private void OnGetMorePolicyDetailsOperationCompleted(object arg) {
            if ((this.GetMorePolicyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMorePolicyDetailsCompleted(this, new GetMorePolicyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_ActivePolicies", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Crm_PolicyInfo[] GetCRM_ActivePolicies(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_ActivePolicies", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((Crm_PolicyInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_ActivePoliciesAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_ActivePoliciesAsync(MDescription, userid, Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_ActivePoliciesAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_ActivePoliciesOperationCompleted == null)) {
                this.GetCRM_ActivePoliciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_ActivePoliciesOperationCompleted);
            }
            this.InvokeAsync("GetCRM_ActivePolicies", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_ActivePoliciesOperationCompleted, userState);
        }
        
        private void OnGetCRM_ActivePoliciesOperationCompleted(object arg) {
            if ((this.GetCRM_ActivePoliciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_ActivePoliciesCompleted(this, new GetCRM_ActivePoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_Customers", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Crm_PolicyInfo[] GetCRM_Customers(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_Customers", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((Crm_PolicyInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_CustomersAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_CustomersAsync(MDescription, userid, Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_CustomersAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_CustomersOperationCompleted == null)) {
                this.GetCRM_CustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_CustomersOperationCompleted);
            }
            this.InvokeAsync("GetCRM_Customers", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_CustomersOperationCompleted, userState);
        }
        
        private void OnGetCRM_CustomersOperationCompleted(object arg) {
            if ((this.GetCRM_CustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_CustomersCompleted(this, new GetCRM_CustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_ActiveCustomers", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Crm_PolicyInfo[] GetCRM_ActiveCustomers(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_ActiveCustomers", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((Crm_PolicyInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_ActiveCustomersAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_ActiveCustomersAsync(MDescription, userid, Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_ActiveCustomersAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_ActiveCustomersOperationCompleted == null)) {
                this.GetCRM_ActiveCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_ActiveCustomersOperationCompleted);
            }
            this.InvokeAsync("GetCRM_ActiveCustomers", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_ActiveCustomersOperationCompleted, userState);
        }
        
        private void OnGetCRM_ActiveCustomersOperationCompleted(object arg) {
            if ((this.GetCRM_ActiveCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_ActiveCustomersCompleted(this, new GetCRM_ActiveCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_AllPolicies", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Crm_PolicyInfo[] GetCRM_AllPolicies(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_AllPolicies", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((Crm_PolicyInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_AllPoliciesAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_AllPoliciesAsync(MDescription, userid, Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_AllPoliciesAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_AllPoliciesOperationCompleted == null)) {
                this.GetCRM_AllPoliciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_AllPoliciesOperationCompleted);
            }
            this.InvokeAsync("GetCRM_AllPolicies", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_AllPoliciesOperationCompleted, userState);
        }
        
        private void OnGetCRM_AllPoliciesOperationCompleted(object arg) {
            if ((this.GetCRM_AllPoliciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_AllPoliciesCompleted(this, new GetCRM_AllPoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_PolicyRenewal", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Crm_Renewal[] GetCRM_PolicyRenewal(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_PolicyRenewal", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((Crm_Renewal[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_PolicyRenewalAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_PolicyRenewalAsync(MDescription, userid, Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_PolicyRenewalAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_PolicyRenewalOperationCompleted == null)) {
                this.GetCRM_PolicyRenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_PolicyRenewalOperationCompleted);
            }
            this.InvokeAsync("GetCRM_PolicyRenewal", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_PolicyRenewalOperationCompleted, userState);
        }
        
        private void OnGetCRM_PolicyRenewalOperationCompleted(object arg) {
            if ((this.GetCRM_PolicyRenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_PolicyRenewalCompleted(this, new GetCRM_PolicyRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_Birthday", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Crm_Birthday[] GetCRM_Birthday(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_Birthday", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((Crm_Birthday[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_BirthdayAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_BirthdayAsync(MDescription, userid, Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_BirthdayAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_BirthdayOperationCompleted == null)) {
                this.GetCRM_BirthdayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_BirthdayOperationCompleted);
            }
            this.InvokeAsync("GetCRM_Birthday", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_BirthdayOperationCompleted, userState);
        }
        
        private void OnGetCRM_BirthdayOperationCompleted(object arg) {
            if ((this.GetCRM_BirthdayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_BirthdayCompleted(this, new GetCRM_BirthdayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_Claims", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CRM_Claims[] GetCRM_Claims(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_Claims", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((CRM_Claims[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_ClaimsAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_ClaimsAsync(MDescription, userid, Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_ClaimsAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_ClaimsOperationCompleted == null)) {
                this.GetCRM_ClaimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_ClaimsOperationCompleted);
            }
            this.InvokeAsync("GetCRM_Claims", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_ClaimsOperationCompleted, userState);
        }
        
        private void OnGetCRM_ClaimsOperationCompleted(object arg) {
            if ((this.GetCRM_ClaimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_ClaimsCompleted(this, new GetCRM_ClaimsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_DashBoard", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CRM_Dashboard[] GetCRM_DashBoard(string MDescription, string userid, string Subsidiary, string BusinessUnit) {
            object[] results = this.Invoke("GetCRM_DashBoard", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit});
            return ((CRM_Dashboard[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_DashBoardAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit) {
            this.GetCRM_DashBoardAsync(MDescription, userid, Subsidiary, BusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetCRM_DashBoardAsync(string MDescription, string userid, string Subsidiary, string BusinessUnit, object userState) {
            if ((this.GetCRM_DashBoardOperationCompleted == null)) {
                this.GetCRM_DashBoardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_DashBoardOperationCompleted);
            }
            this.InvokeAsync("GetCRM_DashBoard", new object[] {
                        MDescription,
                        userid,
                        Subsidiary,
                        BusinessUnit}, this.GetCRM_DashBoardOperationCompleted, userState);
        }
        
        private void OnGetCRM_DashBoardOperationCompleted(object arg) {
            if ((this.GetCRM_DashBoardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_DashBoardCompleted(this, new GetCRM_DashBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_PolicyDetail", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CRM_PolicyDetail[] GetCRM_PolicyDetail(string CustomerID, string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_PolicyDetail", new object[] {
                        CustomerID,
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((CRM_PolicyDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_PolicyDetailAsync(string CustomerID, string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_PolicyDetailAsync(CustomerID, Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_PolicyDetailAsync(string CustomerID, string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_PolicyDetailOperationCompleted == null)) {
                this.GetCRM_PolicyDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_PolicyDetailOperationCompleted);
            }
            this.InvokeAsync("GetCRM_PolicyDetail", new object[] {
                        CustomerID,
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_PolicyDetailOperationCompleted, userState);
        }
        
        private void OnGetCRM_PolicyDetailOperationCompleted(object arg) {
            if ((this.GetCRM_PolicyDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_PolicyDetailCompleted(this, new GetCRM_PolicyDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_ClaimsDetail", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CRM_ClaimsDetail[] GetCRM_ClaimsDetail(string CustomerID, string Subsidiary, string BusinessUnit, string Pages) {
            object[] results = this.Invoke("GetCRM_ClaimsDetail", new object[] {
                        CustomerID,
                        Subsidiary,
                        BusinessUnit,
                        Pages});
            return ((CRM_ClaimsDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_ClaimsDetailAsync(string CustomerID, string Subsidiary, string BusinessUnit, string Pages) {
            this.GetCRM_ClaimsDetailAsync(CustomerID, Subsidiary, BusinessUnit, Pages, null);
        }
        
        /// <remarks/>
        public void GetCRM_ClaimsDetailAsync(string CustomerID, string Subsidiary, string BusinessUnit, string Pages, object userState) {
            if ((this.GetCRM_ClaimsDetailOperationCompleted == null)) {
                this.GetCRM_ClaimsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_ClaimsDetailOperationCompleted);
            }
            this.InvokeAsync("GetCRM_ClaimsDetail", new object[] {
                        CustomerID,
                        Subsidiary,
                        BusinessUnit,
                        Pages}, this.GetCRM_ClaimsDetailOperationCompleted, userState);
        }
        
        private void OnGetCRM_ClaimsDetailOperationCompleted(object arg) {
            if ((this.GetCRM_ClaimsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_ClaimsDetailCompleted(this, new GetCRM_ClaimsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/ABSMotorInterest", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ABSMotorInterest(
                    string MERCHANTID, 
                    string MERCHANTPWD, 
                    string MOT_POL_NUM, 
                    string MOT_REG_NUM, 
                    string MOT_USER_NAME, 
                    System.DateTime MOT_START_DATE, 
                    System.DateTime MOT_END_DATE, 
                    string MOT_HP_CC, 
                    string MOT_ENGINE_NUM, 
                    string MOT_CHASSIS_NUM, 
                    string MOT_MANUF_YEAR, 
                    string MOT_VEH_COLOR, 
                    string MOT_VEH_MAKE, 
                    string MOT_VEH_TYPE, 
                    string MOT_VEH_VALUE, 
                    string MOT_VEH_PREM, 
                    string MOT_VEH_RATE, 
                    string MOT_FLEET_RATE, 
                    string MOT_SPECIAL_RATE, 
                    string MOT_EXCESS_BY_BACK, 
                    string MOT_RISK_DAYS, 
                    string MOT_TPPD_VALUE, 
                    decimal MOT_SRCC_RATE, 
                    decimal MOT_FLOOD_RATE, 
                    decimal MOT_EQUAKE_RATE, 
                    decimal MOT_OTHER_RATE, 
                    string MOT_USERID, 
                    string MOT_COVER_TYPE) {
            object[] results = this.Invoke("ABSMotorInterest", new object[] {
                        MERCHANTID,
                        MERCHANTPWD,
                        MOT_POL_NUM,
                        MOT_REG_NUM,
                        MOT_USER_NAME,
                        MOT_START_DATE,
                        MOT_END_DATE,
                        MOT_HP_CC,
                        MOT_ENGINE_NUM,
                        MOT_CHASSIS_NUM,
                        MOT_MANUF_YEAR,
                        MOT_VEH_COLOR,
                        MOT_VEH_MAKE,
                        MOT_VEH_TYPE,
                        MOT_VEH_VALUE,
                        MOT_VEH_PREM,
                        MOT_VEH_RATE,
                        MOT_FLEET_RATE,
                        MOT_SPECIAL_RATE,
                        MOT_EXCESS_BY_BACK,
                        MOT_RISK_DAYS,
                        MOT_TPPD_VALUE,
                        MOT_SRCC_RATE,
                        MOT_FLOOD_RATE,
                        MOT_EQUAKE_RATE,
                        MOT_OTHER_RATE,
                        MOT_USERID,
                        MOT_COVER_TYPE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ABSMotorInterestAsync(
                    string MERCHANTID, 
                    string MERCHANTPWD, 
                    string MOT_POL_NUM, 
                    string MOT_REG_NUM, 
                    string MOT_USER_NAME, 
                    System.DateTime MOT_START_DATE, 
                    System.DateTime MOT_END_DATE, 
                    string MOT_HP_CC, 
                    string MOT_ENGINE_NUM, 
                    string MOT_CHASSIS_NUM, 
                    string MOT_MANUF_YEAR, 
                    string MOT_VEH_COLOR, 
                    string MOT_VEH_MAKE, 
                    string MOT_VEH_TYPE, 
                    string MOT_VEH_VALUE, 
                    string MOT_VEH_PREM, 
                    string MOT_VEH_RATE, 
                    string MOT_FLEET_RATE, 
                    string MOT_SPECIAL_RATE, 
                    string MOT_EXCESS_BY_BACK, 
                    string MOT_RISK_DAYS, 
                    string MOT_TPPD_VALUE, 
                    decimal MOT_SRCC_RATE, 
                    decimal MOT_FLOOD_RATE, 
                    decimal MOT_EQUAKE_RATE, 
                    decimal MOT_OTHER_RATE, 
                    string MOT_USERID, 
                    string MOT_COVER_TYPE) {
            this.ABSMotorInterestAsync(MERCHANTID, MERCHANTPWD, MOT_POL_NUM, MOT_REG_NUM, MOT_USER_NAME, MOT_START_DATE, MOT_END_DATE, MOT_HP_CC, MOT_ENGINE_NUM, MOT_CHASSIS_NUM, MOT_MANUF_YEAR, MOT_VEH_COLOR, MOT_VEH_MAKE, MOT_VEH_TYPE, MOT_VEH_VALUE, MOT_VEH_PREM, MOT_VEH_RATE, MOT_FLEET_RATE, MOT_SPECIAL_RATE, MOT_EXCESS_BY_BACK, MOT_RISK_DAYS, MOT_TPPD_VALUE, MOT_SRCC_RATE, MOT_FLOOD_RATE, MOT_EQUAKE_RATE, MOT_OTHER_RATE, MOT_USERID, MOT_COVER_TYPE, null);
        }
        
        /// <remarks/>
        public void ABSMotorInterestAsync(
                    string MERCHANTID, 
                    string MERCHANTPWD, 
                    string MOT_POL_NUM, 
                    string MOT_REG_NUM, 
                    string MOT_USER_NAME, 
                    System.DateTime MOT_START_DATE, 
                    System.DateTime MOT_END_DATE, 
                    string MOT_HP_CC, 
                    string MOT_ENGINE_NUM, 
                    string MOT_CHASSIS_NUM, 
                    string MOT_MANUF_YEAR, 
                    string MOT_VEH_COLOR, 
                    string MOT_VEH_MAKE, 
                    string MOT_VEH_TYPE, 
                    string MOT_VEH_VALUE, 
                    string MOT_VEH_PREM, 
                    string MOT_VEH_RATE, 
                    string MOT_FLEET_RATE, 
                    string MOT_SPECIAL_RATE, 
                    string MOT_EXCESS_BY_BACK, 
                    string MOT_RISK_DAYS, 
                    string MOT_TPPD_VALUE, 
                    decimal MOT_SRCC_RATE, 
                    decimal MOT_FLOOD_RATE, 
                    decimal MOT_EQUAKE_RATE, 
                    decimal MOT_OTHER_RATE, 
                    string MOT_USERID, 
                    string MOT_COVER_TYPE, 
                    object userState) {
            if ((this.ABSMotorInterestOperationCompleted == null)) {
                this.ABSMotorInterestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnABSMotorInterestOperationCompleted);
            }
            this.InvokeAsync("ABSMotorInterest", new object[] {
                        MERCHANTID,
                        MERCHANTPWD,
                        MOT_POL_NUM,
                        MOT_REG_NUM,
                        MOT_USER_NAME,
                        MOT_START_DATE,
                        MOT_END_DATE,
                        MOT_HP_CC,
                        MOT_ENGINE_NUM,
                        MOT_CHASSIS_NUM,
                        MOT_MANUF_YEAR,
                        MOT_VEH_COLOR,
                        MOT_VEH_MAKE,
                        MOT_VEH_TYPE,
                        MOT_VEH_VALUE,
                        MOT_VEH_PREM,
                        MOT_VEH_RATE,
                        MOT_FLEET_RATE,
                        MOT_SPECIAL_RATE,
                        MOT_EXCESS_BY_BACK,
                        MOT_RISK_DAYS,
                        MOT_TPPD_VALUE,
                        MOT_SRCC_RATE,
                        MOT_FLOOD_RATE,
                        MOT_EQUAKE_RATE,
                        MOT_OTHER_RATE,
                        MOT_USERID,
                        MOT_COVER_TYPE}, this.ABSMotorInterestOperationCompleted, userState);
        }
        
        private void OnABSMotorInterestOperationCompleted(object arg) {
            if ((this.ABSMotorInterestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ABSMotorInterestCompleted(this, new ABSMotorInterestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/Passing_NNPC_Travel_PostSource", RequestElementName="Passing_NNPC_Travel_PostSource", RequestNamespace="http://Custodianservices.com/", ResponseElementName="Passing_NNPC_Travel_PostSourceResponse", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Passing_NNPC_Travel_PostSourceResult")]
        public string POSTNNPCTravelRec(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string Address, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    string PostSource, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string OtherCountry, 
                    string PolicyNo, 
                    string mCompany) {
            object[] results = this.Invoke("POSTNNPCTravelRec", new object[] {
                        MerchantID,
                        Mpassword,
                        Title,
                        Surname,
                        FirstName,
                        Dateofbirth,
                        Gender,
                        Nationality,
                        IdentificationType,
                        IdentificationNo,
                        Occupation,
                        PhoneNo,
                        Email,
                        Address,
                        TravelType,
                        TravelDestination,
                        TravelerDOB,
                        PeriodofInsurance,
                        Purposeoftrip,
                        DepartureDate,
                        ReturnDate,
                        totalCost,
                        ChildU18,
                        GroupCount,
                        ReferenceNo,
                        PostSource,
                        BrokerID,
                        CommRate,
                        PremRate,
                        OtherCountry,
                        PolicyNo,
                        mCompany});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void POSTNNPCTravelRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string Address, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    string PostSource, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string OtherCountry, 
                    string PolicyNo, 
                    string mCompany) {
            this.POSTNNPCTravelRecAsync(MerchantID, Mpassword, Title, Surname, FirstName, Dateofbirth, Gender, Nationality, IdentificationType, IdentificationNo, Occupation, PhoneNo, Email, Address, TravelType, TravelDestination, TravelerDOB, PeriodofInsurance, Purposeoftrip, DepartureDate, ReturnDate, totalCost, ChildU18, GroupCount, ReferenceNo, PostSource, BrokerID, CommRate, PremRate, OtherCountry, PolicyNo, mCompany, null);
        }
        
        /// <remarks/>
        public void POSTNNPCTravelRecAsync(
                    string MerchantID, 
                    string Mpassword, 
                    string Title, 
                    string Surname, 
                    string FirstName, 
                    System.DateTime Dateofbirth, 
                    string Gender, 
                    string Nationality, 
                    string IdentificationType, 
                    string IdentificationNo, 
                    string Occupation, 
                    string PhoneNo, 
                    string Email, 
                    string Address, 
                    string TravelType, 
                    string TravelDestination, 
                    System.DateTime TravelerDOB, 
                    string PeriodofInsurance, 
                    string Purposeoftrip, 
                    System.DateTime DepartureDate, 
                    System.DateTime ReturnDate, 
                    decimal totalCost, 
                    string ChildU18, 
                    string GroupCount, 
                    string ReferenceNo, 
                    string PostSource, 
                    string BrokerID, 
                    string CommRate, 
                    string PremRate, 
                    string OtherCountry, 
                    string PolicyNo, 
                    string mCompany, 
                    object userState) {
            if ((this.POSTNNPCTravelRecOperationCompleted == null)) {
                this.POSTNNPCTravelRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSTNNPCTravelRecOperationCompleted);
            }
            this.InvokeAsync("POSTNNPCTravelRec", new object[] {
                        MerchantID,
                        Mpassword,
                        Title,
                        Surname,
                        FirstName,
                        Dateofbirth,
                        Gender,
                        Nationality,
                        IdentificationType,
                        IdentificationNo,
                        Occupation,
                        PhoneNo,
                        Email,
                        Address,
                        TravelType,
                        TravelDestination,
                        TravelerDOB,
                        PeriodofInsurance,
                        Purposeoftrip,
                        DepartureDate,
                        ReturnDate,
                        totalCost,
                        ChildU18,
                        GroupCount,
                        ReferenceNo,
                        PostSource,
                        BrokerID,
                        CommRate,
                        PremRate,
                        OtherCountry,
                        PolicyNo,
                        mCompany}, this.POSTNNPCTravelRecOperationCompleted, userState);
        }
        
        private void OnPOSTNNPCTravelRecOperationCompleted(object arg) {
            if ((this.POSTNNPCTravelRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSTNNPCTravelRecCompleted(this, new POSTNNPCTravelRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Custodianservices.com/GetCRM_ClaimCount", RequestNamespace="http://Custodianservices.com/", ResponseNamespace="http://Custodianservices.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClaimCount[] GetCRM_ClaimCount(string MDescription, string ProductType, string BusinessUnit) {
            object[] results = this.Invoke("GetCRM_ClaimCount", new object[] {
                        MDescription,
                        ProductType,
                        BusinessUnit});
            return ((ClaimCount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCRM_ClaimCountAsync(string MDescription, string ProductType, string BusinessUnit) {
            this.GetCRM_ClaimCountAsync(MDescription, ProductType, BusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetCRM_ClaimCountAsync(string MDescription, string ProductType, string BusinessUnit, object userState) {
            if ((this.GetCRM_ClaimCountOperationCompleted == null)) {
                this.GetCRM_ClaimCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRM_ClaimCountOperationCompleted);
            }
            this.InvokeAsync("GetCRM_ClaimCount", new object[] {
                        MDescription,
                        ProductType,
                        BusinessUnit}, this.GetCRM_ClaimCountOperationCompleted, userState);
        }
        
        private void OnGetCRM_ClaimCountOperationCompleted(object arg) {
            if ((this.GetCRM_ClaimCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRM_ClaimCountCompleted(this, new GetCRM_ClaimCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class ABSNIID {
        
        private string policyNoField;
        
        private string engineNoField;
        
        private string chasisNoField;
        
        private string coverTypeField;
        
        private string vehMakeField;
        
        private string regNumField;
        
        private string mAnalysisField;
        
        private string mUnitsField;
        
        private string mUserField;
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string EngineNo {
            get {
                return this.engineNoField;
            }
            set {
                this.engineNoField = value;
            }
        }
        
        /// <remarks/>
        public string ChasisNo {
            get {
                return this.chasisNoField;
            }
            set {
                this.chasisNoField = value;
            }
        }
        
        /// <remarks/>
        public string CoverType {
            get {
                return this.coverTypeField;
            }
            set {
                this.coverTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VehMake {
            get {
                return this.vehMakeField;
            }
            set {
                this.vehMakeField = value;
            }
        }
        
        /// <remarks/>
        public string RegNum {
            get {
                return this.regNumField;
            }
            set {
                this.regNumField = value;
            }
        }
        
        /// <remarks/>
        public string mAnalysis {
            get {
                return this.mAnalysisField;
            }
            set {
                this.mAnalysisField = value;
            }
        }
        
        /// <remarks/>
        public string mUnits {
            get {
                return this.mUnitsField;
            }
            set {
                this.mUnitsField = value;
            }
        }
        
        /// <remarks/>
        public string mUser {
            get {
                return this.mUserField;
            }
            set {
                this.mUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class ClaimCount {
        
        private string claimCount1Field;
        
        private string unitsField;
        
        private string productsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ClaimCount")]
        public string ClaimCount1 {
            get {
                return this.claimCount1Field;
            }
            set {
                this.claimCount1Field = value;
            }
        }
        
        /// <remarks/>
        public string Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public string Products {
            get {
                return this.productsField;
            }
            set {
                this.productsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class CRM_PolicyDetail {
        
        private string customerIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string policy_NoField;
        
        private string phoneField;
        
        private string emailField;
        
        private string producttypeField;
        
        private string sumInsuredField;
        
        private string premiumField;
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Policy_No {
            get {
                return this.policy_NoField;
            }
            set {
                this.policy_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Producttype {
            get {
                return this.producttypeField;
            }
            set {
                this.producttypeField = value;
            }
        }
        
        /// <remarks/>
        public string SumInsured {
            get {
                return this.sumInsuredField;
            }
            set {
                this.sumInsuredField = value;
            }
        }
        
        /// <remarks/>
        public string Premium {
            get {
                return this.premiumField;
            }
            set {
                this.premiumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class CRM_Dashboard {
        
        private int cntActivePoliciesField;
        
        private int countCustomersField;
        
        private int activeCustomersField;
        
        private int customerPolicyField;
        
        private int policyRenewalField;
        
        private int birthdayField;
        
        private int claimsField;
        
        private int lapsePolField;
        
        private int niidPolField;
        
        private int to_berenewedField;
        
        private int broker_productionField;
        
        /// <remarks/>
        public int CntActivePolicies {
            get {
                return this.cntActivePoliciesField;
            }
            set {
                this.cntActivePoliciesField = value;
            }
        }
        
        /// <remarks/>
        public int CountCustomers {
            get {
                return this.countCustomersField;
            }
            set {
                this.countCustomersField = value;
            }
        }
        
        /// <remarks/>
        public int ActiveCustomers {
            get {
                return this.activeCustomersField;
            }
            set {
                this.activeCustomersField = value;
            }
        }
        
        /// <remarks/>
        public int CustomerPolicy {
            get {
                return this.customerPolicyField;
            }
            set {
                this.customerPolicyField = value;
            }
        }
        
        /// <remarks/>
        public int PolicyRenewal {
            get {
                return this.policyRenewalField;
            }
            set {
                this.policyRenewalField = value;
            }
        }
        
        /// <remarks/>
        public int Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
        
        /// <remarks/>
        public int Claims {
            get {
                return this.claimsField;
            }
            set {
                this.claimsField = value;
            }
        }
        
        /// <remarks/>
        public int LapsePol {
            get {
                return this.lapsePolField;
            }
            set {
                this.lapsePolField = value;
            }
        }
        
        /// <remarks/>
        public int NiidPol {
            get {
                return this.niidPolField;
            }
            set {
                this.niidPolField = value;
            }
        }
        
        /// <remarks/>
        public int To_berenewed {
            get {
                return this.to_berenewedField;
            }
            set {
                this.to_berenewedField = value;
            }
        }
        
        /// <remarks/>
        public int broker_production {
            get {
                return this.broker_productionField;
            }
            set {
                this.broker_productionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class CRM_Claims {
        
        private string customerIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string policyNoField;
        
        private string claimsNoField;
        
        private string phoneField;
        
        private string emailField;
        
        private string productsField;
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string ClaimsNo {
            get {
                return this.claimsNoField;
            }
            set {
                this.claimsNoField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Products {
            get {
                return this.productsField;
            }
            set {
                this.productsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class Crm_Birthday {
        
        private string customerIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string dOBField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class Crm_Renewal {
        
        private string customerIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string pol_NoField;
        
        private string productsField;
        
        private string daysLeftField;
        
        private string renwDateField;
        
        private string gross_PremiumField;
        
        private string sum_InsuredField;
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Pol_No {
            get {
                return this.pol_NoField;
            }
            set {
                this.pol_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Products {
            get {
                return this.productsField;
            }
            set {
                this.productsField = value;
            }
        }
        
        /// <remarks/>
        public string daysLeft {
            get {
                return this.daysLeftField;
            }
            set {
                this.daysLeftField = value;
            }
        }
        
        /// <remarks/>
        public string RenwDate {
            get {
                return this.renwDateField;
            }
            set {
                this.renwDateField = value;
            }
        }
        
        /// <remarks/>
        public string Gross_Premium {
            get {
                return this.gross_PremiumField;
            }
            set {
                this.gross_PremiumField = value;
            }
        }
        
        /// <remarks/>
        public string Sum_Insured {
            get {
                return this.sum_InsuredField;
            }
            set {
                this.sum_InsuredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class Crm_PolicyInfo {
        
        private string customerIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string policy_NoField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Policy_No {
            get {
                return this.policy_NoField;
            }
            set {
                this.policy_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class MorePolicyDetails {
        
        private string policyNoField;
        
        private string policyEBusinessField;
        
        private string agenctNumField;
        
        private string agenctNameField;
        
        private string insuredNumField;
        
        private string insuredNameField;
        
        private string insuredOthNameField;
        
        private string insAddr1Field;
        
        private string insAddr2Field;
        
        private string insAddr3Field;
        
        private string telNumField;
        
        private string insuredTelNumField;
        
        private string insuredEmailField;
        
        private System.DateTime dOBField;
        
        private string insStateField;
        
        private string insLGAField;
        
        private string bizUnitField;
        
        private string insOccupField;
        
        private string bizBranchField;
        
        private System.DateTime startdateField;
        
        private System.DateTime enddateField;
        
        private decimal sumInsField;
        
        private decimal mPremiumField;
        
        private decimal outPremiumField;
        
        private decimal instPremiumField;
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyEBusiness {
            get {
                return this.policyEBusinessField;
            }
            set {
                this.policyEBusinessField = value;
            }
        }
        
        /// <remarks/>
        public string AgenctNum {
            get {
                return this.agenctNumField;
            }
            set {
                this.agenctNumField = value;
            }
        }
        
        /// <remarks/>
        public string AgenctName {
            get {
                return this.agenctNameField;
            }
            set {
                this.agenctNameField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredNum {
            get {
                return this.insuredNumField;
            }
            set {
                this.insuredNumField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredName {
            get {
                return this.insuredNameField;
            }
            set {
                this.insuredNameField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredOthName {
            get {
                return this.insuredOthNameField;
            }
            set {
                this.insuredOthNameField = value;
            }
        }
        
        /// <remarks/>
        public string InsAddr1 {
            get {
                return this.insAddr1Field;
            }
            set {
                this.insAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string InsAddr2 {
            get {
                return this.insAddr2Field;
            }
            set {
                this.insAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string InsAddr3 {
            get {
                return this.insAddr3Field;
            }
            set {
                this.insAddr3Field = value;
            }
        }
        
        /// <remarks/>
        public string TelNum {
            get {
                return this.telNumField;
            }
            set {
                this.telNumField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredTelNum {
            get {
                return this.insuredTelNumField;
            }
            set {
                this.insuredTelNumField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredEmail {
            get {
                return this.insuredEmailField;
            }
            set {
                this.insuredEmailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public string InsState {
            get {
                return this.insStateField;
            }
            set {
                this.insStateField = value;
            }
        }
        
        /// <remarks/>
        public string InsLGA {
            get {
                return this.insLGAField;
            }
            set {
                this.insLGAField = value;
            }
        }
        
        /// <remarks/>
        public string BizUnit {
            get {
                return this.bizUnitField;
            }
            set {
                this.bizUnitField = value;
            }
        }
        
        /// <remarks/>
        public string InsOccup {
            get {
                return this.insOccupField;
            }
            set {
                this.insOccupField = value;
            }
        }
        
        /// <remarks/>
        public string BizBranch {
            get {
                return this.bizBranchField;
            }
            set {
                this.bizBranchField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Startdate {
            get {
                return this.startdateField;
            }
            set {
                this.startdateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Enddate {
            get {
                return this.enddateField;
            }
            set {
                this.enddateField = value;
            }
        }
        
        /// <remarks/>
        public decimal SumIns {
            get {
                return this.sumInsField;
            }
            set {
                this.sumInsField = value;
            }
        }
        
        /// <remarks/>
        public decimal mPremium {
            get {
                return this.mPremiumField;
            }
            set {
                this.mPremiumField = value;
            }
        }
        
        /// <remarks/>
        public decimal OutPremium {
            get {
                return this.outPremiumField;
            }
            set {
                this.outPremiumField = value;
            }
        }
        
        /// <remarks/>
        public decimal InstPremium {
            get {
                return this.instPremiumField;
            }
            set {
                this.instPremiumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class certificate_out {
        
        private string error_codeField;
        
        private string error_messageField;
        
        private string file_nameField;
        
        private string file_contentField;
        
        private string policy_idField;
        
        /// <remarks/>
        public string error_code {
            get {
                return this.error_codeField;
            }
            set {
                this.error_codeField = value;
            }
        }
        
        /// <remarks/>
        public string error_message {
            get {
                return this.error_messageField;
            }
            set {
                this.error_messageField = value;
            }
        }
        
        /// <remarks/>
        public string file_name {
            get {
                return this.file_nameField;
            }
            set {
                this.file_nameField = value;
            }
        }
        
        /// <remarks/>
        public string file_content {
            get {
                return this.file_contentField;
            }
            set {
                this.file_contentField = value;
            }
        }
        
        /// <remarks/>
        public string policy_id {
            get {
                return this.policy_idField;
            }
            set {
                this.policy_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class NotificationsDetails {
        
        private string merchantIDField;
        
        private string mpasswordField;
        
        private string notifyIDField;
        
        private string policyNoField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private System.DateTime dOBField;
        
        private string phoneNumberField;
        
        private string emailField;
        
        private System.DateTime renewalDateField;
        
        private System.DateTime paymentDateField;
        
        private string receiptNoField;
        
        private decimal receiptAmtField;
        
        private string narrationField;
        
        private string renUrlField;
        
        private string emailResponseField;
        
        private string smsResponseField;
        
        private string premiumBalanceField;
        
        /// <remarks/>
        public string MerchantID {
            get {
                return this.merchantIDField;
            }
            set {
                this.merchantIDField = value;
            }
        }
        
        /// <remarks/>
        public string Mpassword {
            get {
                return this.mpasswordField;
            }
            set {
                this.mpasswordField = value;
            }
        }
        
        /// <remarks/>
        public string NotifyID {
            get {
                return this.notifyIDField;
            }
            set {
                this.notifyIDField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RenewalDate {
            get {
                return this.renewalDateField;
            }
            set {
                this.renewalDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PaymentDate {
            get {
                return this.paymentDateField;
            }
            set {
                this.paymentDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiptNo {
            get {
                return this.receiptNoField;
            }
            set {
                this.receiptNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal ReceiptAmt {
            get {
                return this.receiptAmtField;
            }
            set {
                this.receiptAmtField = value;
            }
        }
        
        /// <remarks/>
        public string Narration {
            get {
                return this.narrationField;
            }
            set {
                this.narrationField = value;
            }
        }
        
        /// <remarks/>
        public string RenUrl {
            get {
                return this.renUrlField;
            }
            set {
                this.renUrlField = value;
            }
        }
        
        /// <remarks/>
        public string EmailResponse {
            get {
                return this.emailResponseField;
            }
            set {
                this.emailResponseField = value;
            }
        }
        
        /// <remarks/>
        public string smsResponse {
            get {
                return this.smsResponseField;
            }
            set {
                this.smsResponseField = value;
            }
        }
        
        /// <remarks/>
        public string PremiumBalance {
            get {
                return this.premiumBalanceField;
            }
            set {
                this.premiumBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class PolBalances {
        
        private string policyNoField;
        
        private decimal polOutStandBalField;
        
        private string polInsuredField;
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal PolOutStandBal {
            get {
                return this.polOutStandBalField;
            }
            set {
                this.polOutStandBalField = value;
            }
        }
        
        /// <remarks/>
        public string PolInsured {
            get {
                return this.polInsuredField;
            }
            set {
                this.polInsuredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class mResponse {
        
        private string message_CodeField;
        
        private string message_StatusField;
        
        private string policyNoField;
        
        private string certificateNo1Field;
        
        private string certificateNo2Field;
        
        /// <remarks/>
        public string message_Code {
            get {
                return this.message_CodeField;
            }
            set {
                this.message_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string message_Status {
            get {
                return this.message_StatusField;
            }
            set {
                this.message_StatusField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string CertificateNo1 {
            get {
                return this.certificateNo1Field;
            }
            set {
                this.certificateNo1Field = value;
            }
        }
        
        /// <remarks/>
        public string CertificateNo2 {
            get {
                return this.certificateNo2Field;
            }
            set {
                this.certificateNo2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class TravelInsuranceArray {
        
        private string merchantIDField;
        
        private string mpasswordField;
        
        private string titleNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string addressField;
        
        private string m_CltAddressField;
        
        private string phoneNumberField;
        
        private string emailField;
        
        private System.DateTime dateOfBirthField;
        
        private string occupationField;
        
        private string genderField;
        
        private string nationalityField;
        
        private string travelTypeField;
        
        private string travelDestinationField;
        
        private string identificationNoField;
        
        private string identificationTypeField;
        
        private string periodofInsuranceField;
        
        private string purposeoftripField;
        
        private System.DateTime departureDateField;
        
        private System.DateTime returnDateField;
        
        private System.DateTime travelerDOBField;
        
        private string totalCostField;
        
        private string childU18Field;
        
        private string groupCountField;
        
        private string referenceNoField;
        
        private string postSourceField;
        
        private string brokerIDField;
        
        private string commRateField;
        
        private string premRateField;
        
        private string otherCountryField;
        
        private string branchField;
        
        private string isLeadingField;
        
        private string packageTypeField;
        
        private string isGroupField;
        
        /// <remarks/>
        public string MerchantID {
            get {
                return this.merchantIDField;
            }
            set {
                this.merchantIDField = value;
            }
        }
        
        /// <remarks/>
        public string Mpassword {
            get {
                return this.mpasswordField;
            }
            set {
                this.mpasswordField = value;
            }
        }
        
        /// <remarks/>
        public string TitleName {
            get {
                return this.titleNameField;
            }
            set {
                this.titleNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string m_CltAddress {
            get {
                return this.m_CltAddressField;
            }
            set {
                this.m_CltAddressField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        public string TravelType {
            get {
                return this.travelTypeField;
            }
            set {
                this.travelTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TravelDestination {
            get {
                return this.travelDestinationField;
            }
            set {
                this.travelDestinationField = value;
            }
        }
        
        /// <remarks/>
        public string IdentificationNo {
            get {
                return this.identificationNoField;
            }
            set {
                this.identificationNoField = value;
            }
        }
        
        /// <remarks/>
        public string IdentificationType {
            get {
                return this.identificationTypeField;
            }
            set {
                this.identificationTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PeriodofInsurance {
            get {
                return this.periodofInsuranceField;
            }
            set {
                this.periodofInsuranceField = value;
            }
        }
        
        /// <remarks/>
        public string Purposeoftrip {
            get {
                return this.purposeoftripField;
            }
            set {
                this.purposeoftripField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DepartureDate {
            get {
                return this.departureDateField;
            }
            set {
                this.departureDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReturnDate {
            get {
                return this.returnDateField;
            }
            set {
                this.returnDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TravelerDOB {
            get {
                return this.travelerDOBField;
            }
            set {
                this.travelerDOBField = value;
            }
        }
        
        /// <remarks/>
        public string TotalCost {
            get {
                return this.totalCostField;
            }
            set {
                this.totalCostField = value;
            }
        }
        
        /// <remarks/>
        public string ChildU18 {
            get {
                return this.childU18Field;
            }
            set {
                this.childU18Field = value;
            }
        }
        
        /// <remarks/>
        public string GroupCount {
            get {
                return this.groupCountField;
            }
            set {
                this.groupCountField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceNo {
            get {
                return this.referenceNoField;
            }
            set {
                this.referenceNoField = value;
            }
        }
        
        /// <remarks/>
        public string PostSource {
            get {
                return this.postSourceField;
            }
            set {
                this.postSourceField = value;
            }
        }
        
        /// <remarks/>
        public string BrokerID {
            get {
                return this.brokerIDField;
            }
            set {
                this.brokerIDField = value;
            }
        }
        
        /// <remarks/>
        public string CommRate {
            get {
                return this.commRateField;
            }
            set {
                this.commRateField = value;
            }
        }
        
        /// <remarks/>
        public string PremRate {
            get {
                return this.premRateField;
            }
            set {
                this.premRateField = value;
            }
        }
        
        /// <remarks/>
        public string OtherCountry {
            get {
                return this.otherCountryField;
            }
            set {
                this.otherCountryField = value;
            }
        }
        
        /// <remarks/>
        public string Branch {
            get {
                return this.branchField;
            }
            set {
                this.branchField = value;
            }
        }
        
        /// <remarks/>
        public string IsLeading {
            get {
                return this.isLeadingField;
            }
            set {
                this.isLeadingField = value;
            }
        }
        
        /// <remarks/>
        public string PackageType {
            get {
                return this.packageTypeField;
            }
            set {
                this.packageTypeField = value;
            }
        }
        
        /// <remarks/>
        public string IsGroup {
            get {
                return this.isGroupField;
            }
            set {
                this.isGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class MotorList {
        
        private string mInsurednameField;
        
        private string mPolicyNumberField;
        
        private string mVehRegField;
        
        private string mChasisNumField;
        
        private string mStartdateField;
        
        private string mEnddateField;
        
        private string mHPCAPACITYField;
        
        private string mVEHVALUEField;
        
        private string mVEHPREMIUMField;
        
        private string mVEHMAKEField;
        
        private string mVEHCOLORField;
        
        private string mENGINENUMField;
        
        /// <remarks/>
        public string mInsuredname {
            get {
                return this.mInsurednameField;
            }
            set {
                this.mInsurednameField = value;
            }
        }
        
        /// <remarks/>
        public string mPolicyNumber {
            get {
                return this.mPolicyNumberField;
            }
            set {
                this.mPolicyNumberField = value;
            }
        }
        
        /// <remarks/>
        public string mVehReg {
            get {
                return this.mVehRegField;
            }
            set {
                this.mVehRegField = value;
            }
        }
        
        /// <remarks/>
        public string mChasisNum {
            get {
                return this.mChasisNumField;
            }
            set {
                this.mChasisNumField = value;
            }
        }
        
        /// <remarks/>
        public string mStartdate {
            get {
                return this.mStartdateField;
            }
            set {
                this.mStartdateField = value;
            }
        }
        
        /// <remarks/>
        public string mEnddate {
            get {
                return this.mEnddateField;
            }
            set {
                this.mEnddateField = value;
            }
        }
        
        /// <remarks/>
        public string mHPCAPACITY {
            get {
                return this.mHPCAPACITYField;
            }
            set {
                this.mHPCAPACITYField = value;
            }
        }
        
        /// <remarks/>
        public string mVEHVALUE {
            get {
                return this.mVEHVALUEField;
            }
            set {
                this.mVEHVALUEField = value;
            }
        }
        
        /// <remarks/>
        public string mVEHPREMIUM {
            get {
                return this.mVEHPREMIUMField;
            }
            set {
                this.mVEHPREMIUMField = value;
            }
        }
        
        /// <remarks/>
        public string mVEHMAKE {
            get {
                return this.mVEHMAKEField;
            }
            set {
                this.mVEHMAKEField = value;
            }
        }
        
        /// <remarks/>
        public string mVEHCOLOR {
            get {
                return this.mVEHCOLORField;
            }
            set {
                this.mVEHCOLORField = value;
            }
        }
        
        /// <remarks/>
        public string mENGINENUM {
            get {
                return this.mENGINENUMField;
            }
            set {
                this.mENGINENUMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class ClaimRegStatus {
        
        private string regStatusField;
        
        private string regStatusCodeField;
        
        /// <remarks/>
        public string RegStatus {
            get {
                return this.regStatusField;
            }
            set {
                this.regStatusField = value;
            }
        }
        
        /// <remarks/>
        public string RegStatusCode {
            get {
                return this.regStatusCodeField;
            }
            set {
                this.regStatusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class PolicyDet {
        
        private string policyNoField;
        
        private string policyEBusinessField;
        
        private string agenctNumField;
        
        private string agenctNameField;
        
        private string insuredNumField;
        
        private string insuredNameField;
        
        private string insuredOthNameField;
        
        private string insAddr1Field;
        
        private string insAddr2Field;
        
        private string insAddr3Field;
        
        private string telNumField;
        
        private string insuredTelNumField;
        
        private string insuredEmailField;
        
        private System.DateTime dOBField;
        
        private string insStateField;
        
        private string insLGAField;
        
        private string bizUnitField;
        
        private string insOccupField;
        
        private string bizBranchField;
        
        private System.DateTime startdateField;
        
        private System.DateTime enddateField;
        
        private decimal sumInsField;
        
        private decimal mPremiumField;
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyEBusiness {
            get {
                return this.policyEBusinessField;
            }
            set {
                this.policyEBusinessField = value;
            }
        }
        
        /// <remarks/>
        public string AgenctNum {
            get {
                return this.agenctNumField;
            }
            set {
                this.agenctNumField = value;
            }
        }
        
        /// <remarks/>
        public string AgenctName {
            get {
                return this.agenctNameField;
            }
            set {
                this.agenctNameField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredNum {
            get {
                return this.insuredNumField;
            }
            set {
                this.insuredNumField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredName {
            get {
                return this.insuredNameField;
            }
            set {
                this.insuredNameField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredOthName {
            get {
                return this.insuredOthNameField;
            }
            set {
                this.insuredOthNameField = value;
            }
        }
        
        /// <remarks/>
        public string InsAddr1 {
            get {
                return this.insAddr1Field;
            }
            set {
                this.insAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string InsAddr2 {
            get {
                return this.insAddr2Field;
            }
            set {
                this.insAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string InsAddr3 {
            get {
                return this.insAddr3Field;
            }
            set {
                this.insAddr3Field = value;
            }
        }
        
        /// <remarks/>
        public string TelNum {
            get {
                return this.telNumField;
            }
            set {
                this.telNumField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredTelNum {
            get {
                return this.insuredTelNumField;
            }
            set {
                this.insuredTelNumField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredEmail {
            get {
                return this.insuredEmailField;
            }
            set {
                this.insuredEmailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public string InsState {
            get {
                return this.insStateField;
            }
            set {
                this.insStateField = value;
            }
        }
        
        /// <remarks/>
        public string InsLGA {
            get {
                return this.insLGAField;
            }
            set {
                this.insLGAField = value;
            }
        }
        
        /// <remarks/>
        public string BizUnit {
            get {
                return this.bizUnitField;
            }
            set {
                this.bizUnitField = value;
            }
        }
        
        /// <remarks/>
        public string InsOccup {
            get {
                return this.insOccupField;
            }
            set {
                this.insOccupField = value;
            }
        }
        
        /// <remarks/>
        public string BizBranch {
            get {
                return this.bizBranchField;
            }
            set {
                this.bizBranchField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Startdate {
            get {
                return this.startdateField;
            }
            set {
                this.startdateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Enddate {
            get {
                return this.enddateField;
            }
            set {
                this.enddateField = value;
            }
        }
        
        /// <remarks/>
        public decimal SumIns {
            get {
                return this.sumInsField;
            }
            set {
                this.sumInsField = value;
            }
        }
        
        /// <remarks/>
        public decimal mPremium {
            get {
                return this.mPremiumField;
            }
            set {
                this.mPremiumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class PolExpDate {
        
        private string policyNoField;
        
        private string polExpirydateField;
        
        private string polInsuredField;
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string PolExpirydate {
            get {
                return this.polExpirydateField;
            }
            set {
                this.polExpirydateField = value;
            }
        }
        
        /// <remarks/>
        public string PolInsured {
            get {
                return this.polInsuredField;
            }
            set {
                this.polInsuredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class PolValidation {
        
        private string policyNoField;
        
        private string polStatusField;
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string PolStatus {
            get {
                return this.polStatusField;
            }
            set {
                this.polStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class Claimfl {
        
        private string claimNoField;
        
        private string clPolicyNoField;
        
        private string claimStatusField;
        
        private string insuredNameField;
        
        /// <remarks/>
        public string ClaimNo {
            get {
                return this.claimNoField;
            }
            set {
                this.claimNoField = value;
            }
        }
        
        /// <remarks/>
        public string ClPolicyNo {
            get {
                return this.clPolicyNoField;
            }
            set {
                this.clPolicyNoField = value;
            }
        }
        
        /// <remarks/>
        public string ClaimStatus {
            get {
                return this.claimStatusField;
            }
            set {
                this.claimStatusField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredName {
            get {
                return this.insuredNameField;
            }
            set {
                this.insuredNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class PassportDetails {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string titleField;
        
        private string phoneNumberField;
        
        private string emailField;
        
        private System.DateTime dateofBirthField;
        
        private string occupationField;
        
        private string genderField;
        
        private string nationalityField;
        
        private string policyNoField;
        
        private string statusCodeField;
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateofBirth {
            get {
                return this.dateofBirthField;
            }
            set {
                this.dateofBirthField = value;
            }
        }
        
        /// <remarks/>
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class BrokerData {
        
        private string agntNameField;
        
        private string agntNumField;
        
        private string agntPremField;
        
        private string agntClaimPaidAmtField;
        
        private string agntNetAmountField;
        
        /// <remarks/>
        public string AgntName {
            get {
                return this.agntNameField;
            }
            set {
                this.agntNameField = value;
            }
        }
        
        /// <remarks/>
        public string AgntNum {
            get {
                return this.agntNumField;
            }
            set {
                this.agntNumField = value;
            }
        }
        
        /// <remarks/>
        public string AgntPrem {
            get {
                return this.agntPremField;
            }
            set {
                this.agntPremField = value;
            }
        }
        
        /// <remarks/>
        public string AgntClaimPaidAmt {
            get {
                return this.agntClaimPaidAmtField;
            }
            set {
                this.agntClaimPaidAmtField = value;
            }
        }
        
        /// <remarks/>
        public string AgntNetAmount {
            get {
                return this.agntNetAmountField;
            }
            set {
                this.agntNetAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class To_be_renewed {
        
        private string customerIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string policy_NoField;
        
        private string phoneField;
        
        private string emailField;
        
        private string producttypeField;
        
        private System.DateTime maxdateField;
        
        private string unitDescriptionField;
        
        private string afterdaysField;
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Policy_No {
            get {
                return this.policy_NoField;
            }
            set {
                this.policy_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Producttype {
            get {
                return this.producttypeField;
            }
            set {
                this.producttypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Maxdate {
            get {
                return this.maxdateField;
            }
            set {
                this.maxdateField = value;
            }
        }
        
        /// <remarks/>
        public string UnitDescription {
            get {
                return this.unitDescriptionField;
            }
            set {
                this.unitDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Afterdays {
            get {
                return this.afterdaysField;
            }
            set {
                this.afterdaysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class CRM_TopProduct {
        
        private string companyField;
        
        private string mProductField;
        
        private string mPremiumField;
        
        private string unitsField;
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string mProduct {
            get {
                return this.mProductField;
            }
            set {
                this.mProductField = value;
            }
        }
        
        /// <remarks/>
        public string mPremium {
            get {
                return this.mPremiumField;
            }
            set {
                this.mPremiumField = value;
            }
        }
        
        /// <remarks/>
        public string Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class CRM_Top10Det {
        
        private string customerIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string companyField;
        
        private string claimAmtField;
        
        private string netAmountField;
        
        private string mAmountField;
        
        private string unitsField;
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string ClaimAmt {
            get {
                return this.claimAmtField;
            }
            set {
                this.claimAmtField = value;
            }
        }
        
        /// <remarks/>
        public string NetAmount {
            get {
                return this.netAmountField;
            }
            set {
                this.netAmountField = value;
            }
        }
        
        /// <remarks/>
        public string mAmount {
            get {
                return this.mAmountField;
            }
            set {
                this.mAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class ClientData {
        
        private string insNameField;
        
        private string insEmailField;
        
        private System.DateTime startdateField;
        
        private System.DateTime enddateField;
        
        private string policyNoField;
        
        private string productNameField;
        
        private System.DateTime lastPaidDtField;
        
        private decimal outPremiumField;
        
        private string totPremiumField;
        
        private string statusRecField;
        
        private string claimsNoField;
        
        /// <remarks/>
        public string InsName {
            get {
                return this.insNameField;
            }
            set {
                this.insNameField = value;
            }
        }
        
        /// <remarks/>
        public string InsEmail {
            get {
                return this.insEmailField;
            }
            set {
                this.insEmailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Startdate {
            get {
                return this.startdateField;
            }
            set {
                this.startdateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Enddate {
            get {
                return this.enddateField;
            }
            set {
                this.enddateField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastPaidDt {
            get {
                return this.lastPaidDtField;
            }
            set {
                this.lastPaidDtField = value;
            }
        }
        
        /// <remarks/>
        public decimal OutPremium {
            get {
                return this.outPremiumField;
            }
            set {
                this.outPremiumField = value;
            }
        }
        
        /// <remarks/>
        public string TotPremium {
            get {
                return this.totPremiumField;
            }
            set {
                this.totPremiumField = value;
            }
        }
        
        /// <remarks/>
        public string StatusRec {
            get {
                return this.statusRecField;
            }
            set {
                this.statusRecField = value;
            }
        }
        
        /// <remarks/>
        public string ClaimsNo {
            get {
                return this.claimsNoField;
            }
            set {
                this.claimsNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Custodianservices.com/")]
    public partial class CRM_ClaimsDetail {
        
        private string customerIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string claim_NoField;
        
        private string phoneField;
        
        private string emailField;
        
        private string producttypeField;
        
        private string claimAmountField;
        
        private System.DateTime enddateField;
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Claim_No {
            get {
                return this.claim_NoField;
            }
            set {
                this.claim_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Producttype {
            get {
                return this.producttypeField;
            }
            set {
                this.producttypeField = value;
            }
        }
        
        /// <remarks/>
        public string ClaimAmount {
            get {
                return this.claimAmountField;
            }
            set {
                this.claimAmountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Enddate {
            get {
                return this.enddateField;
            }
            set {
                this.enddateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_NIIDDataCompletedEventHandler(object sender, GetCRM_NIIDDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_NIIDDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_NIIDDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ABSNIID[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ABSNIID[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_LapseDetailCompletedEventHandler(object sender, GetCRM_LapseDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_LapseDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_LapseDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRM_ClaimsDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRM_ClaimsDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPPTDetailsCompletedEventHandler(object sender, GetPPTDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPTDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPTDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClientData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClientData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_Top10CompletedEventHandler(object sender, GetCRM_Top10CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_Top10CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_Top10CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRM_Top10Det[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRM_Top10Det[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_TopProductlinesCompletedEventHandler(object sender, GetCRM_TopProductlinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_TopProductlinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_TopProductlinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRM_TopProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRM_TopProduct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_TobeRenewedCompletedEventHandler(object sender, GetCRM_TobeRenewedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_TobeRenewedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_TobeRenewedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public To_be_renewed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((To_be_renewed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_BrokerCompletedEventHandler(object sender, GetCRM_BrokerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_BrokerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_BrokerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BrokerData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BrokerData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTBrokerMotorCompletedEventHandler(object sender, POSTBrokerMotorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTBrokerMotorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTBrokerMotorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPassportDetailsCompletedEventHandler(object sender, GetPassportDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPassportDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPassportDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PassportDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PassportDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetClaimStatusCompletedEventHandler(object sender, GetClaimStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClaimStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClaimStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Claimfl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Claimfl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetContactClaimCompletedEventHandler(object sender, GetContactClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Claimfl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Claimfl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPolicyValidationCompletedEventHandler(object sender, GetPolicyValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPolicyValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPolicyValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PolValidation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PolValidation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPolicyExpiryDateCompletedEventHandler(object sender, GetPolicyExpiryDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPolicyExpiryDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPolicyExpiryDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PolExpDate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PolExpDate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPolicyDetailsCompletedEventHandler(object sender, GetPolicyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PolicyDet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PolicyDet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitClaimRegisterCompletedEventHandler(object sender, SubmitClaimRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitClaimRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitClaimRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClaimRegStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClaimRegStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLifeProductCategCompletedEventHandler(object sender, GetLifeProductCategCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLifeProductCategCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLifeProductCategCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLifeProductTypeCompletedEventHandler(object sender, GetLifeProductTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLifeProductTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLifeProductTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAnnuityGuaranteePeriodCompletedEventHandler(object sender, GetAnnuityGuaranteePeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnnuityGuaranteePeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnnuityGuaranteePeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAnnuitypaymentfreqCompletedEventHandler(object sender, GetAnnuitypaymentfreqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnnuitypaymentfreqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnnuitypaymentfreqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAnnuitypayOutFreqCompletedEventHandler(object sender, GetAnnuitypayOutFreqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnnuitypayOutFreqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnnuitypayOutFreqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetClientDetailsCompletedEventHandler(object sender, GetClientDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClientData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClientData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitPaymentRecordCompletedEventHandler(object sender, SubmitPaymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitPaymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitPaymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitPaymentRecord1CompletedEventHandler(object sender, SubmitPaymentRecord1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitPaymentRecord1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitPaymentRecord1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostHomeShieldCompletedEventHandler(object sender, PostHomeShieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostHomeShieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostHomeShieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostHomeShield1CompletedEventHandler(object sender, PostHomeShield1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostHomeShield1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostHomeShield1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostSafetyPlusCompletedEventHandler(object sender, PostSafetyPlusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostSafetyPlusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostSafetyPlusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostSafetyPlus1CompletedEventHandler(object sender, PostSafetyPlus1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostSafetyPlus1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostSafetyPlus1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTMotorRecCompletedEventHandler(object sender, POSTMotorRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTMotorRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTMotorRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTOtherMotorRecCompletedEventHandler(object sender, POSTOtherMotorRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTOtherMotorRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTOtherMotorRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTMotorRec1CompletedEventHandler(object sender, POSTMotorRec1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTMotorRec1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTMotorRec1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMotorPolicyDetailsCompletedEventHandler(object sender, GetMotorPolicyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMotorPolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMotorPolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MotorList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MotorList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLifeProductFrequencyCompletedEventHandler(object sender, GetLifeProductFrequencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLifeProductFrequencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLifeProductFrequencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLifeQuoteTermCompletedEventHandler(object sender, GetLifeQuoteTermCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLifeQuoteTermCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLifeQuoteTermCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLifeCoverTypeCompletedEventHandler(object sender, GetLifeCoverTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLifeCoverTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLifeCoverTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateLifeClientCompletedEventHandler(object sender, CreateLifeClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateLifeClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateLifeClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLifeQuoteCompletedEventHandler(object sender, GetLifeQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLifeQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLifeQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCitiesCompletedEventHandler(object sender, GetCitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTTravelRecCompletedEventHandler(object sender, POSTTravelRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTTravelRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTTravelRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTMultipleTravelRecCompletedEventHandler(object sender, POSTMultipleTravelRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTMultipleTravelRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTMultipleTravelRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTTravelRec1CompletedEventHandler(object sender, POSTTravelRec1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTTravelRec1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTTravelRec1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetlifePolicyBalancesCompletedEventHandler(object sender, GetlifePolicyBalancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetlifePolicyBalancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetlifePolicyBalancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PolBalances Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PolBalances)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTravelQuoteCompletedEventHandler(object sender, GetTravelQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTravelQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTravelQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMotorQuoteCompletedEventHandler(object sender, GetMotorQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMotorQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMotorQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetHomeShieldQuoteCompletedEventHandler(object sender, GetHomeShieldQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHomeShieldQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHomeShieldQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSafetyplusQuoteCompletedEventHandler(object sender, GetSafetyplusQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSafetyplusQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSafetyplusQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTNotificationDetCompletedEventHandler(object sender, POSTNotificationDetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTNotificationDetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTNotificationDetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NotificationsDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotificationsDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NotEMAILCompletedEventHandler(object sender, NotEMAILCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotEMAILCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotEMAILCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetConfirmTelCompletedEventHandler(object sender, GetConfirmTelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfirmTelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfirmTelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitRenewBusinessPayRecCompletedEventHandler(object sender, SubmitRenewBusinessPayRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitRenewBusinessPayRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitRenewBusinessPayRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostTQSyncCompletedEventHandler(object sender, PostTQSyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostTQSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostTQSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostABSSyncCompletedEventHandler(object sender, PostABSSyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostABSSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostABSSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTQproposalNumCompletedEventHandler(object sender, GetTQproposalNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTQproposalNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTQproposalNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostMarineRecCompletedEventHandler(object sender, PostMarineRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostMarineRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostMarineRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostTravel2RagaCompletedEventHandler(object sender, PostTravel2RagaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostTravel2RagaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostTravel2RagaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public certificate_out Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((certificate_out)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostTravelRagaOldCompletedEventHandler(object sender, PostTravelRagaOldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostTravelRagaOldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostTravelRagaOldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public certificate_out Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((certificate_out)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostTravel2RagaArrayCompletedEventHandler(object sender, PostTravel2RagaArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostTravel2RagaArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostTravel2RagaArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public certificate_out Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((certificate_out)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTBrokerMotorRecCompletedEventHandler(object sender, POSTBrokerMotorRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTBrokerMotorRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTBrokerMotorRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTBrokerTravelRecCompletedEventHandler(object sender, POSTBrokerTravelRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTBrokerTravelRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTBrokerTravelRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetBrokerMotorQuoteCompletedEventHandler(object sender, GetBrokerMotorQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBrokerMotorQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBrokerMotorQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostBrokerHouseHolderCompletedEventHandler(object sender, PostBrokerHouseHolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostBrokerHouseHolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostBrokerHouseHolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetHouseHolderQuoteCompletedEventHandler(object sender, GetHouseHolderQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHouseHolderQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHouseHolderQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitClaimRegister1CompletedEventHandler(object sender, SubmitClaimRegister1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitClaimRegister1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitClaimRegister1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClaimRegStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClaimRegStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostClaimsUpdateCompletedEventHandler(object sender, PostClaimsUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostClaimsUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostClaimsUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClaimRegStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClaimRegStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMorePolicyDetailsCompletedEventHandler(object sender, GetMorePolicyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMorePolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMorePolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MorePolicyDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MorePolicyDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_ActivePoliciesCompletedEventHandler(object sender, GetCRM_ActivePoliciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_ActivePoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_ActivePoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Crm_PolicyInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Crm_PolicyInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_CustomersCompletedEventHandler(object sender, GetCRM_CustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_CustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_CustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Crm_PolicyInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Crm_PolicyInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_ActiveCustomersCompletedEventHandler(object sender, GetCRM_ActiveCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_ActiveCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_ActiveCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Crm_PolicyInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Crm_PolicyInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_AllPoliciesCompletedEventHandler(object sender, GetCRM_AllPoliciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_AllPoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_AllPoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Crm_PolicyInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Crm_PolicyInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_PolicyRenewalCompletedEventHandler(object sender, GetCRM_PolicyRenewalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_PolicyRenewalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_PolicyRenewalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Crm_Renewal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Crm_Renewal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_BirthdayCompletedEventHandler(object sender, GetCRM_BirthdayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_BirthdayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_BirthdayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Crm_Birthday[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Crm_Birthday[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_ClaimsCompletedEventHandler(object sender, GetCRM_ClaimsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_ClaimsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_ClaimsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRM_Claims[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRM_Claims[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_DashBoardCompletedEventHandler(object sender, GetCRM_DashBoardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_DashBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_DashBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRM_Dashboard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRM_Dashboard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_PolicyDetailCompletedEventHandler(object sender, GetCRM_PolicyDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_PolicyDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_PolicyDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRM_PolicyDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRM_PolicyDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_ClaimsDetailCompletedEventHandler(object sender, GetCRM_ClaimsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_ClaimsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_ClaimsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRM_ClaimsDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRM_ClaimsDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ABSMotorInterestCompletedEventHandler(object sender, ABSMotorInterestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ABSMotorInterestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ABSMotorInterestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void POSTNNPCTravelRecCompletedEventHandler(object sender, POSTNNPCTravelRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSTNNPCTravelRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSTNNPCTravelRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCRM_ClaimCountCompletedEventHandler(object sender, GetCRM_ClaimCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRM_ClaimCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRM_ClaimCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClaimCount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClaimCount[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591