//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CustodianEveryWhereV2._0.AutoReg {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AutoReg.VehicleCheckSoap")]
    public interface VehicleCheckSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_LicenseInfoByRegNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WS_LicenseInfoByRegNo(string RegistrationNumber, string Lastname, string Firstname, string Middlename, string Longitude, string Latitude, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_LicenseInfoByRegNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WS_LicenseInfoByRegNoAsync(string RegistrationNumber, string Lastname, string Firstname, string Middlename, string Longitude, string Latitude, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_LicenseInfoByRegNoPhoneNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WS_LicenseInfoByRegNoPhoneNo(string RegistrationNumber, string PhoneNo, string Longitude, string Latitude, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_LicenseInfoByRegNoPhoneNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WS_LicenseInfoByRegNoPhoneNoAsync(string RegistrationNumber, string PhoneNo, string Longitude, string Latitude, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_LicenseInfoByRegNoChassisNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WS_LicenseInfoByRegNoChassisNo(string RegistrationNumber, string Chassis, string Longitude, string Latitude, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_LicenseInfoByRegNoChassisNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WS_LicenseInfoByRegNoChassisNoAsync(string RegistrationNumber, string Chassis, string Longitude, string Latitude, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_VehicleCheck_Report", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WS_VehicleCheck_Report(string CompName, string StartDate, string EndDate, string Longitude, string Latitude, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_VehicleCheck_Report", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WS_VehicleCheck_ReportAsync(string CompName, string StartDate, string EndDate, string Longitude, string Latitude, string passkey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface VehicleCheckSoapChannel : CustodianEveryWhereV2._0.AutoReg.VehicleCheckSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehicleCheckSoapClient : System.ServiceModel.ClientBase<CustodianEveryWhereV2._0.AutoReg.VehicleCheckSoap>, CustodianEveryWhereV2._0.AutoReg.VehicleCheckSoap {
        
        public VehicleCheckSoapClient() {
        }
        
        public VehicleCheckSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VehicleCheckSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleCheckSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleCheckSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string WS_LicenseInfoByRegNo(string RegistrationNumber, string Lastname, string Firstname, string Middlename, string Longitude, string Latitude, string passkey) {
            return base.Channel.WS_LicenseInfoByRegNo(RegistrationNumber, Lastname, Firstname, Middlename, Longitude, Latitude, passkey);
        }
        
        public System.Threading.Tasks.Task<string> WS_LicenseInfoByRegNoAsync(string RegistrationNumber, string Lastname, string Firstname, string Middlename, string Longitude, string Latitude, string passkey) {
            return base.Channel.WS_LicenseInfoByRegNoAsync(RegistrationNumber, Lastname, Firstname, Middlename, Longitude, Latitude, passkey);
        }
        
        public string WS_LicenseInfoByRegNoPhoneNo(string RegistrationNumber, string PhoneNo, string Longitude, string Latitude, string passkey) {
            return base.Channel.WS_LicenseInfoByRegNoPhoneNo(RegistrationNumber, PhoneNo, Longitude, Latitude, passkey);
        }
        
        public System.Threading.Tasks.Task<string> WS_LicenseInfoByRegNoPhoneNoAsync(string RegistrationNumber, string PhoneNo, string Longitude, string Latitude, string passkey) {
            return base.Channel.WS_LicenseInfoByRegNoPhoneNoAsync(RegistrationNumber, PhoneNo, Longitude, Latitude, passkey);
        }
        
        public string WS_LicenseInfoByRegNoChassisNo(string RegistrationNumber, string Chassis, string Longitude, string Latitude, string passkey) {
            return base.Channel.WS_LicenseInfoByRegNoChassisNo(RegistrationNumber, Chassis, Longitude, Latitude, passkey);
        }
        
        public System.Threading.Tasks.Task<string> WS_LicenseInfoByRegNoChassisNoAsync(string RegistrationNumber, string Chassis, string Longitude, string Latitude, string passkey) {
            return base.Channel.WS_LicenseInfoByRegNoChassisNoAsync(RegistrationNumber, Chassis, Longitude, Latitude, passkey);
        }
        
        public string WS_VehicleCheck_Report(string CompName, string StartDate, string EndDate, string Longitude, string Latitude, string passkey) {
            return base.Channel.WS_VehicleCheck_Report(CompName, StartDate, EndDate, Longitude, Latitude, passkey);
        }
        
        public System.Threading.Tasks.Task<string> WS_VehicleCheck_ReportAsync(string CompName, string StartDate, string EndDate, string Longitude, string Latitude, string passkey) {
            return base.Channel.WS_VehicleCheck_ReportAsync(CompName, StartDate, EndDate, Longitude, Latitude, passkey);
        }
    }
}
